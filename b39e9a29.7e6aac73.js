(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return m}));var a=n(2),r=n(6),o=(n(0),n(91)),s=n(92),i={id:"sfmc-sql-select",title:"SFMC SQL Select",sidebar_label:"Select",description:"Selected information on the SELECT statement in SFMC SQL"},c={unversionedId:"sql/sfmc-sql-select",id:"sql/sfmc-sql-select",isDocsHomePage:!1,title:"SFMC SQL Select",description:"Selected information on the SELECT statement in SFMC SQL",source:"@site/docs/sql/sfmc-sql-select.mdx",slug:"/sql/sfmc-sql-select",permalink:"/docs/sql/sfmc-sql-select",editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/sql/sfmc-sql-select.mdx",version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1599389920,sidebar_label:"Select",sidebar:"snippets",previous:{title:"SFMC SQL Basics",permalink:"/docs/sql/sfmc-sql-basics"},next:{title:"SFMC SQL From",permalink:"/docs/sql/sfmc-sql-from"}},l=[{value:"Labels",id:"labels",children:[]},{value:"New values",id:"new-values",children:[]},{value:"Conditions",id:"conditions",children:[]},{value:"Table Prefixes",id:"table-prefixes",children:[]},{value:"Flow control",id:"flow-control",children:[]},{value:"Variables &amp; Functions",id:"variables--functions",children:[]}],b={rightToc:l};function m(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(s.a,{content:"Selected information on the SELECT statement in SFMC SQL",mdxType:"LeadText"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"SELECT")," statement opens each query. It both defines the columns of data extensions and system data views that will be needed, as well as allows you to create entirely new data points."),Object(o.b)("p",null,"The simplest version of this statement is ",Object(o.b)("inlineCode",{parentName:"p"},"SELECT *"),", which targets all available columns from the source. I do not recommend this approach, as it is terrible for both readability and performance of your query. It is why ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sfmc-sql-basics#query-studio"}),"Query Studio")," does not support this shortcut."),Object(o.b)("p",null,"The prefered method is targeting columns explicitly by their names:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql"}),"SELECT\n    ContactKey,\n    EmailAddres\n")),Object(o.b)("p",null,"If a column name contains a space, you need to capture it with squared brackets:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{4}","{4}":!0}),"SELECT\n    ContactKey,\n    EmailAddres,\n    [External Contact Id]\n")),Object(o.b)("p",null,"There are also some exceptional cases related to selected ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sfmc-sql-system-data-views"}),"System Data Views")," in Salesforce Marketing Cloud, where you need to use an underscore prefix before a name (for example when taking Subscriber ID from Enterprise Attributes):"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{2}","{2}":!0}),"SELECT\n    _SubscriberId\n")),Object(o.b)("h3",{id:"labels"},"Labels"),Object(o.b)("p",null,"You can also utilize ",Object(o.b)("inlineCode",{parentName:"p"},"SELECT")," as a tool to rename the source columns to match your needs in an outcome data extension. It is especially useful when you are pulling the data from Synchronized Data Extension with names coming from Salesforce custom fields."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{4-5}","{4-5}":!0}),"SELECT\n    ContactKey,\n    EmailAddress,\n    [External Contact Id] AS ExternalContactId,\n    Gender__c AS Gender\n")),Object(o.b)("h3",{id:"new-values"},"New values"),Object(o.b)("p",null,"Use labels also for passing new values directly from your query. Need to add a custom string to outcome data extension? Or maybe synchronization timestamp for debugging purposes? You can leverage SQL for it."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{6} title=\"Add custom column labaled 'ImportDate' with value equal to the UTC time of the script execution for each record\"","{6}":!0,title:'"Add',custom:!0,column:!0,labaled:!0,"'ImportDate'":!0,with:!0,value:!0,equal:!0,to:!0,the:!0,UTC:!0,time:!0,of:!0,script:!0,execution:!0,for:!0,each:!0,'record"':!0}),"SELECT\n    ContactKey,\n    EmailAddress,\n    [External Contact Id] AS ExternalContactId,\n    Gender__c AS Gender,\n    'Lead' AS RecordType,\n    GETUTCDATE() AS ImportDate\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"You Should Know")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"You can even go further with creating new values by leveraging existing data! For example, if you have first name and last name, you can use SQL to create a FullName column from scratch:"),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{4}","{4}":!0}),"SELECT\n    SubscriberKey,\n    EmailAddress,\n    FirstName + ' ' + LastName AS FullName\n")),Object(o.b)("p",{parentName:"div"},"This becomes truly powerful with the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sfmc-sql-functions"}),"SQL functions"),"."))),Object(o.b)("h3",{id:"conditions"},"Conditions"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement evaluates a list of conditions and returns one of the multiple possible result expressions. For Marketing Cloud purposes, it is especially useful when you not only want to select a column but also modify the values within it. Perfect for translating numeric codes to descriptive ones for personalization purposes. Excellent for standardizing data (change those ",Object(o.b)("inlineCode",{parentName:"p"},"1"),", ",Object(o.b)("inlineCode",{parentName:"p"},"true")," and ",Object(o.b)("inlineCode",{parentName:"p"},"on")," values of opt-in to a single format)."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{7-13}","{7-13}":!0}),"SELECT\n    ContactKey,\n    EmailAddress,\n    [External Contact Id] AS ExternalContactId,\n    Gender__c AS Gender,\n    'Lead' AS RecordType,\n    GETUTCDATE() AS ImportDate,\n    CASE MemberType__c\n        WHEN 1 THEN 'Bronze'\n        WHEN 2 THEN 'Silver'\n        WHEN 3 THEN 'Gold'\n        WHEN 4 THEN 'Platinum'\n        ELSE 'Unregistered'\n    END\n")),Object(o.b)("p",null,"You can also leverage ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#labels"}),"labels")," to manipulate the column name at the same time:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{13}","{13}":!0}),"SELECT\n    ContactKey,\n    EmailAddress,\n    [External Contact Id] AS ExternalContactId,\n    Gender__c AS Gender,\n    'Lead' AS RecordType,\n    GETUTCDATE() AS ImportDate,\n    CASE MemberType__c\n        WHEN 1 THEN 'Bronze'\n        WHEN 2 THEN 'Silver'\n        WHEN 3 THEN 'Gold'\n        WHEN 4 THEN 'Platinum'\n        ELSE 'Unregistered'\n    END AS MemberType\n")),Object(o.b)("p",null,"Above examples are already useful in segmentation, but there is also one more way to write and use ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement that gives even more power. The search ",Object(o.b)("inlineCode",{parentName:"p"},"CASE"),"."),Object(o.b)("p",null,"The difference is that you are not passing the column name on which you will be building conditions. Instead, you create a boolean expression from scratch for each scenario."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:'{7-13} title="The same Query as the previous one, but written with Search Case"',"{7-13}":!0,title:'"The',same:!0,Query:!0,as:!0,the:!0,previous:!0,"one,":!0,but:!0,written:!0,with:!0,Search:!0,'Case"':!0}),"SELECT\n    ContactKey,\n    EmailAddress,\n    [External Contact Id] AS ExternalContactId,\n    Gender__c AS Gender,\n    'Lead' AS RecordType,\n    GETUTCDATE() AS ImportDate,\n    CASE\n        WHEN MemberType__c = 1 THEN 'Bronze'\n        WHEN MemberType__c = 2 THEN 'Silver'\n        WHEN MemberType__c = 3 THEN 'Gold'\n        WHEN MemberType__c = 4 THEN 'Platinum'\n        ELSE 'Unregistered'\n    END AS MemberType\n")),Object(o.b)("p",null,"The example above doesn't show why it is worth to use the search ",Object(o.b)("inlineCode",{parentName:"p"},"CASE"),". It is a bit longer than the standard approach! But there is a reason to use this form of ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement that is visible once you want to create more elaborate conditions that are possible only with this version:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:'{3-7} title="Lets calculate what channel we should use in our campaign for a given user"',"{3-7}":!0,title:'"Lets',calculate:!0,what:!0,channel:!0,we:!0,should:!0,use:!0,in:!0,our:!0,campaign:!0,for:!0,a:!0,given:!0,'user"':!0}),"SELECT\n    ContactKey,\n    CASE\n        WHEN IsAppInstalled = 1 THEN 'Push'\n        WHEN EmailOptIn = 1 AND EmailAddress IS NOT NULL THEN 'Email'\n        WHEN PhoneOptIn = 1 AND Mobile IS NOT NULL THEN 'Phone'\n    END AS PrefferedChannel\n")),Object(o.b)("p",null,"As you can see, thanks to search ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement we were able to check conditions on multiple different columns and connect them with ",Object(o.b)("inlineCode",{parentName:"p"},"AND"),"/",Object(o.b)("inlineCode",{parentName:"p"},"OR")," statements for better control. You can use this version of the ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement for all your needs (even those covered by the basic one) to worry not about two ways of formatting."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"You Should Know")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"You can use ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statements inside a ",Object(o.b)("inlineCode",{parentName:"p"},"CASE")," statement to have an even more dynamic query."),Object(o.b)("pre",{parentName:"div"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:'{3-16} title="Let\'s add another dimension of membership level to differentiate available channels"',"{3-16}":!0,title:"\"Let's",add:!0,another:!0,dimension:!0,of:!0,membership:!0,level:!0,to:!0,differentiate:!0,available:!0,'channels"':!0}),"SELECT\n    ContactKey,\n    CASE\n        WHEN MemberType = 'Platinum' THEN 'Key Account Manager'\n        WHEN MemberType = 'Gold' OR MemberType = 'Silver' THEN\n            CASE\n                WHEN PhoneOptIn = 1 AND Mobile IS NOT NULL THEN 'Phone'\n                WHEN EmailOptIn = 1 AND EmailAddress IS NOT NULL THEN 'Email'\n                WHEN IsAppInstalled = 1 THEN 'Push'\n            END\n        WHEN MemberType = 'Bronze' THEN\n            CASE\n                WHEN EmailOptIn = 1 AND EmailAddress IS NOT NULL THEN 'Email'\n                WHEN IsAppInstalled = 1 THEN 'Push'\n            END\n    END AS PrefferedChannel\n")))),Object(o.b)("h3",{id:"table-prefixes"},"Table Prefixes"),Object(o.b)("p",null,"Additional elements that you will be using in many of your queries are table prefixes for selecting columns from multiple joined Data Extensions."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql",metastring:"{2-3}","{2-3}":!0}),"SELECT\n    _Subscriber.SubscriberKey\n    _EnterpriseAttribute.LastName\n")),Object(o.b)("p",null,"I'm covering this topic in-depth in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sfmc-sql-join#table-name-prefix"}),Object(o.b)("inlineCode",{parentName:"a"},"JOIN")," statement documentation"),"."),Object(o.b)("h3",{id:"flow-control"},"Flow control"),Object(o.b)("p",null,"Despite official ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://help.salesforce.com/articleView?id=mc_as_sql_reference.htm&type=5"}),"SFMC SQL documentation")," states that it supports the ",Object(o.b)("inlineCode",{parentName:"p"},"IF")," constructs, I was not able to make it work."),Object(o.b)("h3",{id:"variables--functions"},"Variables & Functions"),Object(o.b)("p",null,"Unfortunately, SFMC SQL does not support variables."),Object(o.b)("p",null,"Fortunately, it does support (selected) functions. Learn more about them in ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"sfmc-sql-functions"}),"SFMC SQL Functions documentation"),"."))}m.isMDXComponent=!0},91:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=b(n),d=a,u=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.a.createElement(u,i(i({ref:t},l),{},{components:n})):r.a.createElement(u,i({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},92:function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var a=n(0),r=n.n(a),o=n(48),s=n.n(o);const i=({content:e})=>r.a.createElement(r.a.Fragment,null,r.a.createElement("p",{id:s.a.leadText},e))}}]);