(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{112:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return f}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=b(a),m=n,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||r;return a?i.a.createElement(f,l(l({ref:t},s),{},{components:a})):i.a.createElement(f,l({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"},113:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var n=a(0),i=a(56),r=a.n(i);const o=({content:e})=>n.createElement(n.Fragment,null,n.createElement("p",{id:r.a.leadText},e))},98:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return u}));var n=a(3),i=a(7),r=(a(0),a(112)),o=a(113),l={id:"ideas",title:"Ideas",slug:"/",description:"Here you can find all my Salesforce IdeaExchange contributions. Let's make the change!"},c={unversionedId:"ideas",id:"ideas",isDocsHomePage:!1,title:"Ideas",description:"Here you can find all my Salesforce IdeaExchange contributions. Let's make the change!",source:"@site/ideas/ideas.mdx",slug:"/",permalink:"/ideas/",editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/ideas/ideas.mdx",version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1609518719},s=[{value:"Journey Builder",id:"journey-builder",children:[{value:"DeliveryTime for Journey Builder emails",id:"deliverytime-for-journey-builder-emails",children:[]},{value:"_DataSourceName for Entry Data Extension in Journey Builder",id:"_datasourcename-for-entry-data-extension-in-journey-builder",children:[]}]},{value:"Behavioral Triggers",id:"behavioral-triggers",children:[{value:"Einstein User Attributes in Behavioral Trigger Content Block",id:"einstein-user-attributes-in-behavioral-trigger-content-block",children:[]},{value:"Behavioral Trigger Abandoned Cart Custom Attributes",id:"behavioral-trigger-abandoned-cart-custom-attributes",children:[]}]},{value:"Mobile Studio",id:"mobile-studio",children:[{value:"Locale-based SMS Blackout",id:"locale-based-sms-blackout",children:[]}]}],b={toc:s};function u(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)(o.a,{content:"Here you can find all my Salesforce IdeaExchange contributions. Let's make the change!",mdxType:"LeadText"}),Object(r.b)("h2",{id:"journey-builder"},"Journey Builder"),Object(r.b)("h3",{id:"deliverytime-for-journey-builder-emails"},"DeliveryTime for Journey Builder emails"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"DeliveryTime")," is ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_job"}),Object(r.b)("inlineCode",{parentName:"a"},"_Job")," Data View")," field that stores timestamp for the email delivery (the moment when it successfully reached the target Email Service Provider). Currently, it is not possible to get delivery time for emails sent via Journey Builder."),Object(r.b)("p",null,"All other engagement data points are available (",Object(r.b)("inlineCode",{parentName:"p"},"EventDate")," field for ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_sent"}),"_Sent"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_open"}),"_Open"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_click"}),"_Click"),", ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_bounce"}),"_Bounce"),") but ",Object(r.b)("inlineCode",{parentName:"p"},"DeliveryTime")," from ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-system-data-views#_job"}),Object(r.b)("inlineCode",{parentName:"a"},"_Job")," Data View")," returns ",Object(r.b)("inlineCode",{parentName:"p"},"NULL")," for Journey Builder emails."),Object(r.b)("p",null,"It is happening, however, only for Journey Builder emails. Sends via any other methods (for example Send Flow) are correctly displaying the delivery time."),Object(r.b)("p",null,"I see it as a massive limitation for automations focused on keeping the database clean and debugging sends."),Object(r.b)("a",{class:"button button--outline button--lg button--primary col col--6 col--offset-3",href:"https://trailblazer.salesforce.com/ideaView?id=0874V000001HkZgQAK"},"Vote on IdeaExchange"),Object(r.b)("h3",{id:"_datasourcename-for-entry-data-extension-in-journey-builder"},"_DataSourceName for Entry Data Extension in Journey Builder"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"_DataSourceName")," personalisation string, as per the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://help.salesforce.com/articleView?id=mc_es_available_personalization_strings.htm&type=5"}),"documentation"),", should show the communication audience's name. It covers lists, data extensions, groups, and filters."),Object(r.b)("p",null,"It works when the email is sent via Email Studio -> Email -> Content -> Send flow. However, when we send Email (or SMS) from Journey Builder, ",Object(r.b)("inlineCode",{parentName:"p"},"_DataSourceName"),' shows "All Subscribers" instead of the Entry Data Extension name. It is true for both Multi-Step Journeys, and Single Email Sends.'),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"_DataSourceName")," should show Entry Data Extension Name for Emails in Journey Builder. It is handy for debugging from Send Log and creating dynamic logic in emails based on Data Extension naming convention."),Object(r.b)("a",{class:"button button--outline button--lg button--primary col col--6 col--offset-3",href:"https://trailblazer.salesforce.com/ideaView?id=0874V000001HkZRQA0"},"Vote on IdeaExchange"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"behavioral-triggers"},"Behavioral Triggers"),Object(r.b)("h3",{id:"einstein-user-attributes-in-behavioral-trigger-content-block"},"Einstein User Attributes in Behavioral Trigger Content Block"),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers#behavioral-trigger-content-block"}),"Behavioral Triggers Content Block")," for Emails is an excellent tool for easy drag-and-drop creation of Abandoned Engagement communication. But it is missing one powerful feature \u2014 the ability to personalise the email with customer data."),Object(r.b)("p",null,"It is already available in the form of:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Einstein User Attributes that we can pass through ",Object(r.b)("inlineCode",{parentName:"li"},"setUserInfo")," data layer."),Object(r.b)("li",{parentName:"ul"},"The ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#5-building-the-api-query"}),"request"),' used in the back end of the current Behavioral Triggers Content Block; by adding "&user_attributes=attributeName" to the endpoint.'),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#6-response-parsing"}),"Code")," of the existing Behavioral Triggers Content Block responsible for creating AMPScript variables based on the Einstein User Attributes data.")),Object(r.b)("p",null,"However, as the Einstein User Attributes are neither added to the request by default nor can be configured in the User Integrace of the Content Block, to get this data in the email, one must create yet another, the same call with the above query parameter added. Neither user friendly nor optimal due to expensive ",Object(r.b)("inlineCode",{parentName:"p"},"HTTP.Get")," function running twice in such a scenario."),Object(r.b)("p",null,"Salesforce can fix it. Below are two solution tiers:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Minimum Valuable Solution"),': Add the required query string ("&user_attributes=X,Y") with all potential Custom Einsteins User Attributes to the request URL built within the Content Block code.'),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Solution Deluxe"),": Improve the above with the UI-enabled selection of needed Profile Attributes, just as available with Product Attributes.")),Object(r.b)("a",{class:"button button--outline button--lg button--primary col col--6 col--offset-3",href:"https://trailblazer.salesforce.com/ideaView?id=0874V0000003lB7QAI"},"Vote on IdeaExchange"),Object(r.b)("h3",{id:"behavioral-trigger-abandoned-cart-custom-attributes"},"Behavioral Trigger Abandoned Cart Custom Attributes"),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers"}),"Behavioral Triggers")," are a terrific solution for Abandoned Engagement. The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers#track-cart"}),"Abandoned Cart")," scenario already has multiple great features that make it easy to implement."),Object(r.b)("p",null,"There is, however, area for an easy improvement on that idea to make it much more flexible and ready for real-world scenarios. Salesforce can do it with two solutions:"),Object(r.b)("h4",{id:"custom-cart-attributes"},"Custom Cart Attributes"),Object(r.b)("p",null,"Just as there are Custom Attributes for the Product Catalog, it would be great to have a similar option on the cart itself. Product Catalog ones are global - shared for all Customers interested in selected product. There is a need for something more unique and customer-specific."),Object(r.b)("p",null,"It is already available in the form of an optional ",Object(r.b)("inlineCode",{parentName:"p"},"price")," attribute of ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers#track-cart"}),Object(r.b)("inlineCode",{parentName:"a"},"trackCart")," Collect.js Data Layer")," that contains individual price that does not impact the Product Catalog.  It would be great to have the possibility to add a few more, available in ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers#track-cart"}),Object(r.b)("inlineCode",{parentName:"a"},"trackCart")," Collect.js")," and the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"../docs/config/sfmc-config-behavioral-triggers#api-responses"}),"response")," from Einstein Backend (IgoDigital)."),Object(r.b)("p",null,"Use case? Sure. Coupon Code Name, Coupon Code Discount (either integer or float for per cent value), added Personalisation, Voucher ID. All those tools are frequently used in e-commerce and would be perfect to have in a ",Object(r.b)("inlineCode",{parentName:"p"},"trackCart")," layer. Suitable for personalisation, perfect for passing data needed for rebuilding the cart."),Object(r.b)("h4",{id:"cart-attributes-visibility-in-the-content-block"},"Cart Attributes Visibility in the Content Block"),Object(r.b)("p",null,"This one is an extension of the above idea. We already have a way to decide which Product Catalog Attributes are displayed in Behavioral Trigger Content Block. But in many cases, when I use Abandoned Cart, I would like to show ",Object(r.b)("inlineCode",{parentName:"p"},"trackCart")," individual price (including applied coupons) instead of the global Catalog one. It could also be useful for some Custom Cart Attributes from the previous solution."),Object(r.b)("p",null,"Below are three solution tiers:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Minimum Valuable Solution"),": Add ",Object(r.b)("inlineCode",{parentName:"li"},"price")," ",Object(r.b)("inlineCode",{parentName:"li"},"trackCart")," attribute (",Object(r.b)("inlineCode",{parentName:"li"},"amount")," in the ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#api-responses"}),"response")," from the IgoDigital) available for selection when defining fields shown for products in ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#behavioral-trigger-content-block"}),"Behavioral Trigger Content Block"),"."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Nice Solution"),": On top of the first point, add two additional (optional) attributes to ",Object(r.b)("inlineCode",{parentName:"li"},"trackCart")," Collect.js and IgoDigital ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#api-responses"}),"response"),": ",Object(r.b)("inlineCode",{parentName:"li"},"couponCodeName"),", ",Object(r.b)("inlineCode",{parentName:"li"},"couponCodeDiscount "),"- and make them also available for selection in ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#behavioral-trigger-content-block"}),"Behavioral Trigger Content Block"),"."),Object(r.b)("li",{parentName:"ol"},Object(r.b)("strong",{parentName:"li"},"Solution Deluxe"),": On top of the first point, add the possibility of defining Custom Cart Attributes in the UI and leveraging them in ",Object(r.b)("inlineCode",{parentName:"li"},"trackCart")," Collect.js and IgoDigital ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#api-responses"}),"response"),". Just as with Custom Profile Attributes / Custom Product Attributes. Additionally, make them also available for selection in ",Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"../docs/config/sfmc-config-behavioral-triggers#behavioral-trigger-content-block"}),"Behavioral Trigger Content Block"),".")),Object(r.b)("a",{class:"button button--outline button--lg button--primary col col--6 col--offset-3",href:"https://trailblazer.salesforce.com/ideaView?id=0874V0000003lCKQAY"},"Vote on IdeaExchange"),Object(r.b)("hr",null),Object(r.b)("h2",{id:"mobile-studio"},"Mobile Studio"),Object(r.b)("h3",{id:"locale-based-sms-blackout"},"Locale-based SMS Blackout"),Object(r.b)("p",null,"SMS Blackout allows blocking SMS sends in the chosen timeframe. Currently, SMS Blackout can be configured based on Account Timezone."),Object(r.b)("p",null,"However, for multi-country clients, it would be much better to configure the Blackout period based on the recipient's local timezone. MobilePhone locale is perfect for implementing this."),Object(r.b)("p",null,"This way, it would be possible to create, for example, single SMS Blackout for night time and apply it for each contact regardless of the timezone. The locale is already there for MobileConnect and can be leveraged for determining timezone offset."),Object(r.b)("a",{class:"button button--outline button--lg button--primary col col--6 col--offset-3",href:"https://trailblazer.salesforce.com/ideaView?id=0874V000000sjSYQAY"},"Vote on IdeaExchange"))}u.isMDXComponent=!0}}]);