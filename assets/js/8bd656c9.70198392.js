"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[7768],{4137:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>d});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=p(o),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return o?n.createElement(h,s(s({ref:t},c),{},{components:o})):n.createElement(h,s({ref:t},c))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,s=new Array(i);s[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var p=2;p<i;p++)s[p]=o[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},1872:(e,t,o)=>{o.d(t,{m:()=>i});var n=o(7294);const r="leadText_qzwo",i=e=>{let{content:t}=e;return n.createElement(n.Fragment,null,n.createElement("p",{id:r},t))}},5744:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=o(7462),r=(o(7294),o(4137)),i=o(1872);const s={id:"js-snippet-export-import-document-sfmc-roles",title:"Export, Import & Document SFMC Roles",sidebar_label:"Export, Import & Document SFMC Roles",description:"Backup, clone, and move cross-account the Salesforce Marketing Cloud roles. In seconds.",image:"img/og/og-image-js-export-import-document-sfmc-roles.png",tags:["JavaScript","Marketing Cloud","Configuration","Users","Setup"]},a=void 0,l={unversionedId:"js/js-snippet-export-import-document-sfmc-roles",id:"js/js-snippet-export-import-document-sfmc-roles",title:"Export, Import & Document SFMC Roles",description:"Backup, clone, and move cross-account the Salesforce Marketing Cloud roles. In seconds.",source:"@site/docs/js/js-snippet-export-import-document-sfmc-roles.mdx",sourceDirName:"js",slug:"/js/js-snippet-export-import-document-sfmc-roles",permalink:"/docs/js/js-snippet-export-import-document-sfmc-roles",draft:!1,editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/js/js-snippet-export-import-document-sfmc-roles.mdx",tags:[{label:"JavaScript",permalink:"/docs/tags/java-script"},{label:"Marketing Cloud",permalink:"/docs/tags/marketing-cloud"},{label:"Configuration",permalink:"/docs/tags/configuration"},{label:"Users",permalink:"/docs/tags/users"},{label:"Setup",permalink:"/docs/tags/setup"}],version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1650383171,formattedLastUpdatedAt:"Apr 19, 2022",frontMatter:{id:"js-snippet-export-import-document-sfmc-roles",title:"Export, Import & Document SFMC Roles",sidebar_label:"Export, Import & Document SFMC Roles",description:"Backup, clone, and move cross-account the Salesforce Marketing Cloud roles. In seconds.",image:"img/og/og-image-js-export-import-document-sfmc-roles.png",tags:["JavaScript","Marketing Cloud","Configuration","Users","Setup"]},sidebar:"snippets",previous:{title:"\xbb JS Snippets",permalink:"/docs/category/-js-snippets"},next:{title:"AMPScript",permalink:"/docs/category/ampscript"}},p={},c=[{value:"Where the magic happens",id:"where-the-magic-happens",level:2},{value:"Export &amp; Import SFMC Roles",id:"export--import-sfmc-roles",level:2},{value:"Exporting an SFMC Role",id:"exporting-an-sfmc-role",level:3},{value:"Importing a SFMC Role",id:"importing-a-sfmc-role",level:3},{value:"Document SFMC Roles",id:"document-sfmc-roles",level:2}],m={toc:c};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.m,{content:"Backup, clone, and move cross-account the Salesforce Marketing Cloud roles. In seconds.",mdxType:"LeadText"}),(0,r.kt)("p",null,"While you get a set of standard user Roles in Salesforce Marketing Cloud, those are rarely enough. Instead, they are the base on which you can create custom-tailored solutions that align with your business architecture."),(0,r.kt)("p",null,"On top of that, standard Roles are silently changing from release to release as permissions come and go, so keeping track of them is crucial to have a clear picture of what your users can do."),(0,r.kt)("p",null,"Marketing Cloud doesn't make it easy. There is no option to clone existing Roles to serve as a starting point for a new custom one. There is no option to export and import them between SFMC accounts. There is no option to create good documentation on them (unless you have a kink for super long print screens)."),(0,r.kt)("p",null,"Here comes JavaScript and ",(0,r.kt)("a",{parentName:"p",href:"/docs/js/js-dom"},"Document Object Model (DOM)")," to unlock all those scenarios."),(0,r.kt)("p",null,"Fear not - you don't have to be a developer to leverage it. I will describe everything step-by-step and share ready-to-use snippets with you. Let's dive in."),(0,r.kt)("admonition",{title:"You Should Know",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If you want to learn more about:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"standard vs custom roles,"),(0,r.kt)("li",{parentName:"ul"},"permission overlap logic,"),(0,r.kt)("li",{parentName:"ul"},"the meaning behind their sometimes very cryptic names")),(0,r.kt)("p",{parentName:"admonition"},"Check out my ",(0,r.kt)("a",{parentName:"p",href:"/docs/config/sfmc-config-permissions"},"article on SFMC Permissions"),".")),(0,r.kt)("h2",{id:"where-the-magic-happens"},"Where the magic happens"),(0,r.kt)("p",null,"To start using those SFMC Role-related, ",(0,r.kt)("a",{parentName:"p",href:"/docs/js/js-dom"},"DOM"),"-fueled solutions:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Go to Marketing Cloud Setup \xbb Users \xbb Roles."),(0,r.kt)("li",{parentName:"ol"},"Click on the name of the Role you want to work with."),(0,r.kt)("li",{parentName:"ol"},"Click the ",(0,r.kt)("inlineCode",{parentName:"li"},"expand all")," Button to see the whole permission tree for the Role."),(0,r.kt)("li",{parentName:"ol"},"Right-click any permission name within that tree and select ",(0,r.kt)("inlineCode",{parentName:"li"},"Inspect Element"),"."),(0,r.kt)("li",{parentName:"ol"},"This will open a Developer Console in a new part of your browser. Select the Console tab."),(0,r.kt)("li",{parentName:"ol"},"[Optional]"," Click the trash icon visible in the top left or right of the Console (depending on the browser you use) to clean up the working space."),(0,r.kt)("li",{parentName:"ol"},"You are ready for the fun!")),(0,r.kt)("admonition",{title:"You Should Know",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If any of the solutions described later in this article doesn't work:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"Inspect one of the permission names again (either with a right-click or using the aim icon visible on the top left side of the Console)."),(0,r.kt)("li",{parentName:"ol"},"If above didn't help, refresh the page and go through the steps once more."))),(0,r.kt)("h2",{id:"export--import-sfmc-roles"},"Export & Import SFMC Roles"),(0,r.kt)("p",null,"The export and import solution is super helpful when you want to either clone an existing Role and make some changes or move your perfect, tried and tested custom Role to yet another Salesforce Marketing Cloud Account."),(0,r.kt)("p",null,"It will require a two-step approach."),(0,r.kt)("h3",{id:"exporting-an-sfmc-role"},"Exporting an SFMC Role"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#where-the-magic-happens"},"Access the Console")," and paste the below code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Export SFMC role"',title:'"Export',SFMC:!0,'role"':!0},"let permissionsExport = {};\nfor (const permission of document.querySelectorAll('input[type=\"checkbox\"]')) {\n    permissionsExport[permission.id] = permission.checked;\n};\nconsole.log(JSON.stringify(permissionsExport));\n")),(0,r.kt)("p",null,"Click enter to run it."),(0,r.kt)("p",null,"It will ",(0,r.kt)("a",{parentName:"p",href:"/docs/js/js-loops"},"loop")," through all the checkboxes that you can see next to the permissions, save them in a single JavaScript object and output them to the Console. Yeah, it looks awful, but that's all you need - list of checkboxes along with their status."),(0,r.kt)("p",null,"Save this long text (either by highlighting and copy-pasting or by right-clicking in an empty space within the Console row and clicking ",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Selected"),"). It should start with ",(0,r.kt)("inlineCode",{parentName:"p"},"{")," and end with ",(0,r.kt)("inlineCode",{parentName:"p"},"}"),"."),(0,r.kt)("h3",{id:"importing-a-sfmc-role"},"Importing a SFMC Role"),(0,r.kt)("p",null,"Once you have your Role export saved, go to the new Role. It can be either an existing Role you want to overwrite or a new Role (in the same or different SFMC account)."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"#where-the-magic-happens"},"Access the Console")," and paste the below code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'{1} title="Import SFMC role"',"{1}":!0,title:'"Import',SFMC:!0,'role"':!0},"let permissionsImport = {}; // replace {} with the object copied from Export script output\nfor (const [permissionId, permissionStatus] of Object.entries(permissionsImport)) {\n    document.getElementById(permissionId).checked = permissionStatus;\n}\n")),(0,r.kt)("p",null,"Change the ",(0,r.kt)("inlineCode",{parentName:"p"},"{}")," in the first line with the export text you saved and click enter to run it."),(0,r.kt)("p",null,"It will ",(0,r.kt)("a",{parentName:"p",href:"/docs/js/js-loops"},"loop")," through all the saved checkboxes and update their state to the one from your export. If some new checkboxes don't exist in the export (for example, you did your export before Marketing Cloud Release that added some new permissions), those new ones will stay unchanged."),(0,r.kt)("p",null,"That's it. You cloned a Role."),(0,r.kt)("p",null,"Now, as you can see, the export text was not readable. If you don't want to clone a Role but rather create documentation for it, there is yet another script that is just as easy to use."),(0,r.kt)("h2",{id:"document-sfmc-roles"},"Document SFMC Roles"),(0,r.kt)("p",null,"Documenting Roles and Permissions is not easy. You cannot just copy-paste what you see, the HTML is a mess, and the indented names are not unique. Sure, you can print screen it, but that's a lot of checkboxes. And such images aren't accessible documentation. There must be a better way."),(0,r.kt)("p",null,"And there is, so ",(0,r.kt)("a",{parentName:"p",href:"#where-the-magic-happens"},"access the Console")," and paste the below code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'{24} title="Create documentation of your SFMC role"',"{24}":!0,title:'"Create',documentation:!0,of:!0,your:!0,SFMC:!0,'role"':!0},"let permissions = {};\n/* Loop through all permission checkboxes to get their name and state */\nfor (const permission of document.querySelectorAll('input[type=\"checkbox\"]')) {\n    /* Get the lowest-level permission name */\n    let permissionName = permission.closest('tr').querySelector('div.PermissionNameText').innerText;\n\n    /* Loop through all levels of permissions to build full path for each permission */\n    let permissionContainer = permission.closest('table');\n    do {\n        permissionContainer = permissionContainer.parentElement.previousElementSibling;\n        let permissionParentName = permissionContainer?.querySelector('div.PermissionNameText')?.innerText;\n        if (permissionParentName) permissionName = `${permissionParentName} - ${permissionName}`;\n    } while (permissionContainer && permissionContainer.id !== 'RolePanel');\n\n    /* Differentiate between Allowed and Denied checkboxes */\n    let permissionType = permission.id.startsWith('a') ? 'Allowed' : 'Denied';\n\n    /* Insert permission state into permissions object */\n    if (!permissions[permissionName]) permissions[permissionName] = {};\n    permissions[permissionName][permissionType] = permission.checked;\n};\n\n/* Output permissions in documentation-friendly format (CSV) */\nconst delimiter = '\\t'; // Configure prefered CSV delimiter (tab, comma, pipe, etc.)\nlet csv = `Permission${delimiter}Allowed${delimiter}Denied\\n`; // Headers\n/* Loop through permissions object to build a single string for easy copying from console to table */\nfor (const [permissionName, permissionStatus] of Object.entries(permissions)) {\n    csv += `${permissionName}${delimiter}${permissionStatus.Allowed}${delimiter}${permissionStatus.Denied}\\n`;\n};\nconsole.log(csv);\n")),(0,r.kt)("p",null,"Click enter to run it."),(0,r.kt)("p",null,"It will ",(0,r.kt)("a",{parentName:"p",href:"/docs/js/js-loops"},"loop")," through all the checkboxes that you can see next to the permissions and:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Save the permission name (for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"View All Contacts"),")."),(0,r.kt)("li",{parentName:"ul"},"Prefix it with all the parent permissions to get a full path (for example, ",(0,r.kt)("inlineCode",{parentName:"li"},"Contacts - Contact Builder - View All Contacts"),")."),(0,r.kt)("li",{parentName:"ul"},"Capture the state of Allow and Deny (as a boolean)."),(0,r.kt)("li",{parentName:"ul"},"Output it to the Console as a single long text with Headers and delimiter of your choice.")),(0,r.kt)("p",null,"The default delimiter is a tab (",(0,r.kt)("inlineCode",{parentName:"p"},"\\t"),") because it allows you to copy-paste the outcome from Console to a spreadsheet and have it automatically populate the columns. However, depending on your needs, you can change the ",(0,r.kt)("inlineCode",{parentName:"p"},"delimiter")," variable to something else, like a comma (",(0,r.kt)("inlineCode",{parentName:"p"},","),")  or pipe (",(0,r.kt)("inlineCode",{parentName:"p"},"|"),")."),(0,r.kt)("p",null,"Save this long text in its entirety (either by highlighting and copy-pasting or by right-clicking in empty space within the Console row and clicking ",(0,r.kt)("inlineCode",{parentName:"p"},"Copy Selected"),") - I recommend pushing it straight to a spreadsheet to leverage the autoformatting and filtering capabilities."),(0,r.kt)("p",null,"Add the Name of the Role and its purpose stored in the Description field, and that's it. You are good to go."))}u.isMDXComponent=!0}}]);