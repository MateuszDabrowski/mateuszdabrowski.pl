"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[7542],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>p});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(a),h=l,p=d["".concat(o,".").concat(h)]||d[h]||m[h]||i;return a?n.createElement(p,r(r({ref:t},c),{},{components:a})):n.createElement(p,r({ref:t},c))}));function p(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=h;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[d]="string"==typeof e?e:l,r[1]=s;for(var u=2;u<i;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},7661:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(7294),l=a(6010),i=a(8259),r=a(3699),s=a(2735),o=a(7325);const u="cardContainer_fWXF",c="cardTitle_rnsV",d="cardDescription_PWke";function m(e){let{href:t,children:a}=e;return n.createElement(r.Z,{href:t,className:(0,l.Z)("card padding--lg",u)},a)}function h(e){let{href:t,icon:a,title:i,description:r}=e;return n.createElement(m,{href:t},n.createElement("h2",{className:(0,l.Z)("text--truncate",c),title:i},a," ",i),r&&n.createElement("p",{className:(0,l.Z)("text--truncate",d),title:r},r))}function p(e){let{item:t}=e;const a=(0,i.Wl)(t);return a?n.createElement(h,{href:a,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:(0,o.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function f(e){let{item:t}=e;const a=(0,s.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",l=(0,i.xz)(t.docId??void 0);return n.createElement(h,{href:t.href,icon:a,title:t.label,description:l?.description})}function k(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(f,{item:t});case"category":return n.createElement(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function b(e){let{className:t}=e;const a=(0,i.jA)();return n.createElement(y,{items:a.items,className:t})}function y(e){const{items:t,className:a}=e;if(!t)return n.createElement(b,e);const r=(0,i.MN)(t);return n.createElement("section",{className:(0,l.Z)("row",a)},r.map(((e,t)=>n.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},n.createElement(k,{item:e})))))}},425:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(7294),l=a(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:a,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:a},t)}},3992:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7462),l=a(7294),i=a(6010),r=a(2957),s=a(6550),o=a(5238),u=a(3609),c=a(2560);function d(e){return function(e){return l.Children.map(e,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:l}}=e;return{value:t,label:a,attributes:n,default:l}}))}function m(e){const{values:t,children:a}=e;return(0,l.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function h(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(i),(0,l.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(n.location.search);t.set(i,e),n.replace({...n.location,search:t.toString()})}),[i,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,i=m(e),[r,s]=(0,l.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:i}))),[o,u]=p({queryString:a,groupId:n}),[d,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,i]=(0,c.Nk)(a);return[n,(0,l.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:n}),k=(()=>{const e=o??d;return h({value:e,tabValues:i})?e:null})();(0,l.useEffect)((()=>{k&&s(k)}),[k]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),f(e)}),[u,f,i]),tabValues:i}}var k=a(1048);const b="tabList__CuJ",y="tabItem_LNqP";function g(e){let{className:t,block:a,selectedValue:s,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.o5)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==s&&(d(t),o(n))},h=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:h,onClick:m},r,{className:(0,i.Z)("tabs__item",y,r?.className,{"tabs__item--active":s===t})}),a??t)})))}function N(e){let{lazy:t,children:a,selectedValue:n}=e;if(t){const e=a.find((e=>e.props.value===n));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=f(e);return l.createElement("div",{className:(0,i.Z)("tabs-container",b)},l.createElement(g,(0,n.Z)({},e,t)),l.createElement(N,(0,n.Z)({},e,t)))}function w(e){const t=(0,k.Z)();return l.createElement(v,(0,n.Z)({key:String(t)},e))}},1872:(e,t,a)=>{a.d(t,{m:()=>i});var n=a(7294);const l="leadText_qzwo",i=e=>{let{content:t}=e;return n.createElement(n.Fragment,null,n.createElement("p",{id:l},t))}},6927:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>u,metadata:()=>d,toc:()=>h});var n=a(7462),l=(a(7294),a(4137)),i=a(1872),r=a(3992),s=a(425),o=a(7661);const u={id:"sfmc-sql-basics",title:"SFMC SQL Basics",sidebar_label:"SQL Basics",description:"SELECT your data FROM Salesforce Marketing Cloud WHERE drag-and-drop Filters are not enough.",image:"img/og/og-image-sql-basics.png",tags:["Marketing Cloud","SQL"]},c=void 0,d={unversionedId:"sql/sfmc-sql-basics",id:"sql/sfmc-sql-basics",title:"SFMC SQL Basics",description:"SELECT your data FROM Salesforce Marketing Cloud WHERE drag-and-drop Filters are not enough.",source:"@site/docs/sql/sfmc-sql-basics.mdx",sourceDirName:"sql",slug:"/sql/sfmc-sql-basics",permalink:"/docs/sql/sfmc-sql-basics",draft:!1,editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/sql/sfmc-sql-basics.mdx",tags:[{label:"Marketing Cloud",permalink:"/docs/tags/marketing-cloud"},{label:"SQL",permalink:"/docs/tags/sql"}],version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1673093914,formattedLastUpdatedAt:"Jan 7, 2023",frontMatter:{id:"sfmc-sql-basics",title:"SFMC SQL Basics",sidebar_label:"SQL Basics",description:"SELECT your data FROM Salesforce Marketing Cloud WHERE drag-and-drop Filters are not enough.",image:"img/og/og-image-sql-basics.png",tags:["Marketing Cloud","SQL"]},sidebar:"docs",previous:{title:"SFMC SQL",permalink:"/docs/category/sfmc-sql"},next:{title:"Select",permalink:"/docs/sql/sfmc-sql-select"}},m={},h=[{value:"How to segment data in Marketing Cloud",id:"how-to-segment-data-in-marketing-cloud",level:2},{value:"SQL in Salesforce Marketing Cloud",id:"sql-in-salesforce-marketing-cloud",level:2},{value:"Where to learn SFMC SQL",id:"where-to-learn-sfmc-sql",level:2},{value:"How to learn SFMC SQL",id:"how-to-learn-sfmc-sql",level:2},{value:"Level 1 - SELECT, FROM, WHERE",id:"level-1---select-from-where",level:3},{value:"Learning materials",id:"learning-materials",level:4},{value:"Check your skills",id:"check-your-skills",level:4},{value:"Level 2 - JOIN, Aliasing, NULL",id:"level-2---join-aliasing-null",level:3},{value:"Learning materials",id:"learning-materials-1",level:4},{value:"Check your skills",id:"check-your-skills-1",level:4},{value:"Level 3 - LIKE, CASE, Strings",id:"level-3---like-case-strings",level:3},{value:"Learning materials",id:"learning-materials-2",level:4},{value:"Check your skills",id:"check-your-skills-2",level:4},{value:"Level 4 - Dates, WHERE operators, Conversion",id:"level-4---dates-where-operators-conversion",level:3},{value:"Learning materials",id:"learning-materials-3",level:4},{value:"Check your skills",id:"check-your-skills-3",level:4},{value:"Level 5 - Multiple JOINS, UNION, INTERSECT and EXCEPT",id:"level-5---multiple-joins-union-intersect-and-except",level:3},{value:"Learning materials",id:"learning-materials-4",level:4},{value:"Check your skills",id:"check-your-skills-4",level:4},{value:"Level 6 - GROUP, COUNT, TOP and HAVING",id:"level-6---group-count-top-and-having",level:3},{value:"Learning materials",id:"learning-materials-5",level:4},{value:"Check your skills",id:"check-your-skills-5",level:4},{value:"Level 7 - coming soon-ish",id:"level-7---coming-soon-ish",level:3},{value:"Writing with style",id:"writing-with-style",level:2},{value:"Order of operations",id:"order-of-operations",level:2},{value:"All SQL Guides",id:"all-sql-guides",level:2}],p={toc:h};function f(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(i.m,{content:"SELECT your data FROM Salesforce Marketing Cloud WHERE drag-and-drop Filters are not enough.",mdxType:"LeadText"}),(0,l.kt)("h2",{id:"how-to-segment-data-in-marketing-cloud"},"How to segment data in Marketing Cloud"),(0,l.kt)("p",null,"Salesforce Marketing Cloud offers a few ways of segmenting data for your marketing needs. Out of the box, you can use Filters and SQL Query Activities."),(0,l.kt)("p",null,"Filters are a straightforward drag-and-drop solution for one-time (Filtered Data Extensions) or refreshed on-schedule (Data Filters with Automation) segmentation. Unfortunately, they are constrained, as they allow you to copy a single Data Extension with all its columns and filtered-down rows. That filtering can leverage source Data Extension values, another Data Extension values (through Data Relationship) or Measures. That's it. For real Marketing Automation, it's not enough."),(0,l.kt)("p",null,"This is why you are looking to learn about SFMC SQL. Along with Automation Studio Query Activity, it will allow you to deploy any segmentation scenario you want with complete control over the output columns, names and values. However, with great power comes some learning required."),(0,l.kt)("p",null,"There is also a third way - paid AppExchange solutions that offer you a way to eat a cookie and have a cookie: the full power of SQL with a drag-and-drop interface. For a price."),(0,l.kt)("p",null,"You can check my comparison of all the above options in my ",(0,l.kt)("a",{parentName:"p",href:"/docs/config/sfmc-appexchange-solutions#sfmc-segmentation-solutions"},"here"),". This article will focus only on the most powerful and free option - SFMC SQL."),(0,l.kt)("h2",{id:"sql-in-salesforce-marketing-cloud"},"SQL in Salesforce Marketing Cloud"),(0,l.kt)("p",null,"SQL (Structured Query Language) is one of the best ways to work with relational databases. And Marketing Cloud's Data Extensions, with the help of Data Designer, offer precisely that. A relational database. The same is valid for system Data Views containing tracking data. Because of this, SQL is used in SFMC whenever powerful segmentation is needed (mainly using Automation Studio)."),(0,l.kt)("p",null,"The main difference from standard SQL (SFMC uses more or less SQL Server 2016) is that SFMC supports only the ",(0,l.kt)("inlineCode",{parentName:"p"},"SELECT")," statement. Neither ",(0,l.kt)("inlineCode",{parentName:"p"},"INSERT"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"UPDATE")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"DELETE")," are officially supported. It is because the queries are executed as a part of the backend query and are limited to provide non-breakable functionality."),(0,l.kt)("p",null,"Another limiting characteristic of SFMC SQL is visible in the data accessible by queries. Only data stored in data extensions or system data views is available. Moreover, you can save the results only to the data extensions. The reason is other data structures of SFMC are not relational databases."),(0,l.kt)("p",null,"Finally, the significant limitation you might hit as your Marketing Cloud grows is AutoKill. It will automatically stop your query if the execution time exceeds the 30 minutes limit. Think about the query with the future in mind. It is vital for queries that are supposed to be the backbones of your data management flow in Marketing Cloud. Even if it works great now, consider how it will behave once you have more data in the system. One of the great ways to not trigger AutoKill is to implement retention periods for the Data Extensions used in the query to limit input data."),(0,l.kt)("h2",{id:"where-to-learn-sfmc-sql"},"Where to learn SFMC SQL"),(0,l.kt)("p",null,"Before we start with the real deal, let's cover where to learn to write SQL. I recommend getting a ",(0,l.kt)("a",{parentName:"p",href:"/docs/config/sfmc-appexchange-solutions#query-studio"},"Query Studio"),". It's a free AppExchange add-on to Marketing Cloud developed by Salesforce. While it has cons, it's perfect for quickly learning how to query."),(0,l.kt)("p",null,"If you cannot install this app in your Marketing Cloud, you still can learn using Query Activities in Automation Studio, but it will be much less user-friendly. For each change in the query, you will have to update the target Data Extension manually and go through multiple steps across the platform to see the results."),(0,l.kt)("p",null,"My approach is to always start in ",(0,l.kt)("a",{parentName:"p",href:"/docs/config/sfmc-appexchange-solutions#query-studio"},"Query Studio"),", and only once my SQL Query is complete and validated do I move it to Automation Studio."),(0,l.kt)("h2",{id:"how-to-learn-sfmc-sql"},"How to learn SFMC SQL"),(0,l.kt)("p",null,"SFMC SQL is very limited compared to the full power of Structured Query Language, but there are still many topics to cover. I split them into steps that slowly add more complex concepts to make it easier. Each should provide knowledge that you can actively use in your day-to-day work."),(0,l.kt)("p",null,"In each level, you will see:"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Learning materials to read."),(0,l.kt)("li",{parentName:"ol"},"Exercise you can do in your Marketing Cloud platform to test your skills."),(0,l.kt)("li",{parentName:"ol"},"Hint that can help you with the exercise if you are stuck."),(0,l.kt)("li",{parentName:"ol"},"Example solution to that exercise. Keep in mind that there might be more than one correct approach.")),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-1---select-from-where"},"Level 1 - SELECT, FROM, WHERE"),(0,l.kt)("p",null,"Learn the three essential SQL statements for all queries. They will give you similar power to what Filters can do - with the bonus of choosing the columns you need for your final segment."),(0,l.kt)("h4",{id:"learning-materials"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select"},"SELECT")," - just the first part, before the aliasing section."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-from"},"FROM")," - whole article."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where"},"WHERE")," - the first part, before the Basic Operators, plus ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#equality-operators"},"Equality Operators")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#logical-operators"},"Logical Operators"),". Don't worry about Comparison operators or shorthands for now. Don't worry about the examples with dates and unknown functions. We will get there. For now, think about how you can filter based on simple values like status."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views"},"System Data Views")," - the basics and ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_subscribers"},"_Subscribers")," Data View.")),(0,l.kt)("h4",{id:"check-your-skills"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Write a query that will find Subscriber Key for all Active (opted-in) Subscribers in your All Subscribers list.")),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"All Subscribers List data is stored in ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_subscribers"},"_Subscribers")," Data View."),(0,l.kt)("li",{parentName:"ol"},"If you are running your query on a child Business Unit, you will need to use ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-from#enterprise-system-data-views"},(0,l.kt)("inlineCode",{parentName:"a"},"Ent.")," prefix"),"."),(0,l.kt)("li",{parentName:"ol"},"You don't have to ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select"},"SELECT")," any columns but the SubscriberKey. You can use ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where"},"WHERE")," on not selected columns."),(0,l.kt)("li",{parentName:"ol"},"Current status of a Subscriber is saved in the ",(0,l.kt)("inlineCode",{parentName:"li"},"Status")," column of ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_subscribers"},"_Subscribers")," Data View as a string. You can use it for filtering with ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where"},"WHERE"),"."))),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit"',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,'Unit"':!0},"SELECT SubscriberKey\nFROM _Subscribers\nWHERE Status = 'active'\n")),(0,l.kt)("p",null,"Bonus: you can change the last line to, for example, ",(0,l.kt)("inlineCode",{parentName:"p"},"WHERE Domain = 'gmail.com'")," to see how many Subscribers are using free Google inbox."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-2---join-aliasing-null"},"Level 2 - JOIN, Aliasing, NULL"),(0,l.kt)("p",null,"Learn how to leverage a second Data Extension or Data View, change the output's column name, and deal with basic ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," cases."),(0,l.kt)("h4",{id:"learning-materials-1"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join"},"JOIN")," - ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#join-types"},"JOIN Types"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#joining-on"},"Joining ON")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#table-name-prefix"},"Table Name Prefixes")," sections. It might be helpful to check out the ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#sfmc-sql-join-cheat-sheet"},"visual cheatsheet"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#aliasing-with-as"},"Aliasing")," - just the Aliasing with AS and Custom values sections."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-null-functions"},"NULL functions")," - just the first three paragraphs and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-null-functions#is-null"},"IS NULL")," section."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_sent"},"_Sent"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_open"},"_Open")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_click"},"_Click")," Data Views.")),(0,l.kt)("h4",{id:"check-your-skills-1"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Write a query that will find Subscriber Key for all Active (opted-in) Subscribers in your All Subscribers list that were sent an email in the last 6 months.")),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Don't write SQL from scratch. Leverage what you already have."),(0,l.kt)("li",{parentName:"ol"},"Sent data is stored in ",(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_sent"},"_Sent")," Data View."),(0,l.kt)("li",{parentName:"ol"},"You don't have to worry about the 6-month requirement because _Sent Data View stores only six months of data."),(0,l.kt)("li",{parentName:"ol"},"You can chain multiple filters using ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#logical-operators"},(0,l.kt)("inlineCode",{parentName:"a"},"WHERE")," Logical Operators"),"."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#left-and-right-joins"},"LEFT JOIN")," will add columns even if there is no data in the second table."),(0,l.kt)("li",{parentName:"ol"},"You can find those records without data in the second table using ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-null-functions#is-null"},(0,l.kt)("inlineCode",{parentName:"a"},"IS NULL")),"."),(0,l.kt)("li",{parentName:"ol"},"You need to join tables ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#joining-on"},(0,l.kt)("inlineCode",{parentName:"a"},"ON"))," a common value."))),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit"',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,'Unit"':!0},"SELECT sub.SubscriberKey\nFROM _Subscribers   AS sub\n    LEFT JOIN _Sent AS sent\n        ON sent.SubscriberKey = sub.SubscriberKey\nWHERE\n    sub.Status = 'active'\n    AND sent.EventDate IS NOT NULL\n")),(0,l.kt)("p",null,"You can write this query without the filter on ",(0,l.kt)("inlineCode",{parentName:"p"},"sent.EventDate")," but with ",(0,l.kt)("inlineCode",{parentName:"p"},"INNER JOIN _Sent")," instead. The above version makes it easier to change the query for the bonus below."),(0,l.kt)("p",null,"Bonus: Change ",(0,l.kt)("inlineCode",{parentName:"p"},"IS NOT NULL")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"IS NULL")," in the last line to see how many active Subscribers haven't received any communication in the last 6 months. It's an excellent segment for the win-back Journey!"))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-3---like-case-strings"},"Level 3 - LIKE, CASE, Strings"),(0,l.kt)("p",null,"Learn how to deal with string values, how to implement SQL version of if/else logic and how to make complex conditions calculating your data. With this, you are no longer limited to the data already available in the tables."),(0,l.kt)("h4",{id:"learning-materials-2"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-like"},"LIKE")," - whole article, but focus on ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-like#like-with-wildcard"},"LIKE with Wildcard"),", you will use it more. Check out also the ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#like-operator"},"LIKE operator in WHERE")," section."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-case"},"CASE")," - whole article plus ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#case-operator"},"CASE operator in WHERE")," section."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-string-functions"},"String functions")," - check out all, but focus on most frequently used ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-string-functions#left--right"},"LEFT & RIGHT"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-string-functions#len"},"LEN")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-string-functions#charindex"},"CHARINDEX"),".")),(0,l.kt)("h4",{id:"check-your-skills-2"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Write a query that will find Subscriber Key for all Subscribers in your All Subscribers list and add a new column called ",(0,l.kt)("inlineCode",{parentName:"p"},"SubscriberKeyType"),". In that new column, calculate whether the Subscriber Key is using an email address, Salesforce ID (and in this case - source object) or other. Possible values should be: ",(0,l.kt)("inlineCode",{parentName:"p"},"Email"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Account"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Contact"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"User"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"Lead"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"Other"),"."),(0,l.kt)("admonition",{title:"You Should Know",type:"note"},(0,l.kt)("p",{parentName:"admonition"},"For our need here, if the Subscriber Key has 18 characters, no ",(0,l.kt)("inlineCode",{parentName:"p"},"@"),", and starts with three specific characters, it probably is a Salesforce ID. Those first three characters point to a specific Salesforce Object being a source of that record:"),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"001 = Account"),(0,l.kt)("li",{parentName:"ul"},"003 = Contact"),(0,l.kt)("li",{parentName:"ul"},"005 = User"),(0,l.kt)("li",{parentName:"ul"},"00Q = Lead")))),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The easiest way to find an email is to use ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-like#like-with-wildcard"},"LIKE with Wildcard")," looking for ",(0,l.kt)("inlineCode",{parentName:"li"},"{something}@{domain}.{tld}"),"."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-case"},"CASE")," returns the value assigned to the first matched scenario, so the order of ",(0,l.kt)("inlineCode",{parentName:"li"},"WHEN"),"s makes a difference."),(0,l.kt)("li",{parentName:"ol"},"You can use multiple conditions and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-string-functions"},"String functions")," in the ",(0,l.kt)("inlineCode",{parentName:"li"},"WHEN")," checks."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-case"},"CASE")," can create a new column when you use it in ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#aliasing-with-as"},"SELECT with an alias"),"."))),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit. The results will differ a lot depending on your SFMC implementation."',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,"Unit.":!0,The:!0,results:!0,will:!0,differ:!0,a:!0,lot:!0,depending:!0,your:!0,SFMC:!0,'implementation."':!0},"SELECT\n      SubscriberKey\n    , CASE\n        WHEN SubscriberKey LIKE '%@%.%'                                 THEN 'Email'\n        WHEN LEN(SubscriberKey) = 18 AND LEFT(SubscriberKey, 3) = '001' THEN 'Account'\n        WHEN LEN(SubscriberKey) = 18 AND LEFT(SubscriberKey, 3) = '003' THEN 'Contact'\n        WHEN LEN(SubscriberKey) = 18 AND LEFT(SubscriberKey, 3) = '005' THEN 'User'\n        WHEN LEN(SubscriberKey) = 18 AND LEFT(SubscriberKey, 3) = '00Q' THEN 'Lead'\n        ELSE 'Other'\n      END AS SubscriberKeyType\nFROM _Subscribers\n")),(0,l.kt)("p",null,"While you could use ",(0,l.kt)("inlineCode",{parentName:"p"},"LIKE")," for all the conditions, ",(0,l.kt)("inlineCode",{parentName:"p"},"LEFT")," will perform better in this ",(0,l.kt)("inlineCode",{parentName:"p"},"CASE")," because it will only compare the first three characters instead of anywhere in the whole string."),(0,l.kt)("p",null,"This query is excellent for understanding what the source of your Subscribers is. It will be even more helpful later when you learn how to aggregate the data. With it, you will quickly see the exact number of subscribers from each source."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-4---dates-where-operators-conversion"},"Level 4 - Dates, WHERE operators, Conversion"),(0,l.kt)("p",null,"Learn how to use the most important filter of all - date filtering. Read about essential date functions and what to do when you don't have the correct data type for your use case."),(0,l.kt)("h4",{id:"learning-materials-3"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-date-functions"},"Date functions")," - ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-date-functions#getdate--getutcdate"},"GETDATE")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-date-functions#dateadd"},"DATEADD")," are the most important sections."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where"},"WHERE")," - while we already covered parts of where, this is time to make a deeper dive into ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#comparison-operators"},"Comparison operators"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#between-shorthand"},"BETWEEN shorthand")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-where#in-shorthand"},"IN shorthand"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-conversion-functions"},"Conversion functions")," - the whole article, but treat Data Types and Data Style Codes more as reference material."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#_bounce"},"_Bounce")," Data View.")),(0,l.kt)("h4",{id:"check-your-skills-3"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Write a query that will find Subscriber Key for all Subscribers in your All Subscribers list that joined the list within the last year and had a bounce on Google or Microsoft email between the first day of the current month (write that date manually, as a string) and today."),(0,l.kt)("p",null,"For this exercise, we will assume that Google users have emails like ",(0,l.kt)("inlineCode",{parentName:"p"},"something@gmail.com"),", Microsoft users - ",(0,l.kt)("inlineCode",{parentName:"p"},"something@outlook.com")," and Yahoo - ",(0,l.kt)("inlineCode",{parentName:"p"},"something@yahoo.com"),".")),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Consider impact of the ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#join-types"},"JOIN type")," on the query output. Can you leverage it to minimise the data you are working on?"),(0,l.kt)("li",{parentName:"ol"},"When writing the date comparison, take a pen and paper and draw a timeline with the part you want to capture. Seeing it makes it much easier to write it correctly."),(0,l.kt)("li",{parentName:"ol"},"When deciding whether to use shorthands - go with the most readable option."))),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit"',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,'Unit"':!0},"SELECT sub.SubscriberKey\nFROM _Subscribers       AS sub\n    INNER JOIN _Bounce  AS b\n        ON b.SubscriberKey = sub.SubscriberKey\nWHERE\n    sub.DateJoined >= DATEADD(YEAR, -1, GETDATE())\n    AND b.Domain IN ('gmail.com', 'outlook.com', 'yahoo.com')\n    AND b.EventDate BETWEEN CONVERT(DATE, '2023-01-01') AND GETDATE()\n")),(0,l.kt)("p",null,"Bonus: Dive deeper into bounces by selecting SMTPBounceReason and SMTPMessage in the ",(0,l.kt)("inlineCode",{parentName:"p"},"_Bounce")," Data View to learn more about the root cause of the bounces."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-5---multiple-joins-union-intersect-and-except"},"Level 5 - Multiple JOINS, UNION, INTERSECT and EXCEPT"),(0,l.kt)("p",null,"Learn to leverage data from multiple tables - the only limitations will be creativity and autokill function crashing queries after 30 minutes of execution ;)"),(0,l.kt)("h4",{id:"learning-materials-4"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#multiple-joins"},"JOINs")," - yup, everything. The Cheat Sheet at the end should be useful to visualise multi-JOIN fun better."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/config/sfmc-system-data-views#journey-data-views"},"Journey Builder Data Views")," - both _Journey and _JourneyActivity.")),(0,l.kt)("h4",{id:"check-your-skills-4"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Find some active Journey from the last quarter that already had some email sends with engagement. Note the name of the Journey and Email Activity."),(0,l.kt)("p",null,"Write a query that will find Subscriber Key and Email Address for all Subscribers in your All Subscribers list that clicked a link in the first email activity in the Journey you selected."),(0,l.kt)("p",null,"Append a proof record with Subscriber Key equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"level5exercise")," and your email address.")),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Think about which tables you need for the task. The less, the better."),(0,l.kt)("li",{parentName:"ol"},"Think what ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#join-types"},"types of JOINs")," will be needed. To make it easier - take a pen and paper and draw a diagram. Seriously, it's super helpful as the number of tables grows."),(0,l.kt)("li",{parentName:"ol"},"Think about what columns you can join the tables in a way that will protect you from the fan out (a one-to-many relationship that results in more rows than needed in the output)."),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#union"},"UNION")," with ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#aliasing-with-as"},"aliases")," is great for arbitrary added records in SQL."))),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit"',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,'Unit"':!0},"SELECT\n      sub.SubscriberKey\n    , sub.EmailAddress\nFROM _Subscribers               AS sub\n    INNER JOIN _Click           AS c\n        ON c.SubscriberKey = sub.SubscriberKey\n        AND c.IsUnique = 1\n    INNER JOIN _JourneyActivity AS ja\n        ON ja.JourneyActivityObjectID = c.TriggererSendDefinitionObjectID\n    INNER JOIN _Journey         AS j\n        ON j.VersionID = ja.VersionID\nWHERE\n    j.JourneyName = 'SelectedJourneyName'\n    AND ja.ActivityName = 'SelectedEmailActivityName'\n\nUNION\n\nSELECT\n      'level5exercise'      AS SubscriberKey\n    , 'your@email.address'  AS EmailAddress\n")),(0,l.kt)("p",null,"Bonus: the fun with multiple joins ",(0,l.kt)("a",{parentName:"p",href:"/docs/sql/snippets/sfmc-sql-debugging-email-sends#solution"},"never ends"),"."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-6---group-count-top-and-having"},"Level 6 - GROUP, COUNT, TOP and HAVING"),(0,l.kt)("p",null,"Graduate from just playing with rows and start calculating the data to see patterns, outliers and problems. It is handy for SFMC Administrators and Consultants performing analysis on the platform data."),(0,l.kt)("h4",{id:"learning-materials-5"},"Learning materials"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-aggregate-functions"},"Aggregate functions")," - focus on ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-aggregate-functions#group-by"},"GROUP BY"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-aggregate-functions#count"},"COUNT")," and ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-aggregate-functions#having"},"HAVING"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#order-of-operations"},"Order of operations")," - this is when it becomes tricky."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#top"},"TOP")," - focus on how to use it with ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#top-with-order-by"},"ORDER BY"))),(0,l.kt)("h4",{id:"check-your-skills-5"},"Check your skills"),(0,l.kt)(r.Z,{defaultValue:"exercise",values:[{label:"Exercise",value:"exercise"},{label:"Hints",value:"hints"},{label:"Solution",value:"solution"}],mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"exercise",mdxType:"TabItem"},(0,l.kt)("p",null,"Find the number of sends, unique bounces, and the bounce rate (percent of bounces vs sends) per domain from deliveries attempted in the last month. Filter the records to only those Domains with at least 100 sends. Order by the bounce rate descending and limit to the top 20 records."),(0,l.kt)("p",null,"If you send huge volumes, feel free to change the timeframe from last month to last week for the exercise.")),(0,l.kt)(s.Z,{value:"hints",mdxType:"TabItem"},(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Build query step by step and validate the output. In this case, it might be easiest to write SELECT for just the Domain with the suitable tables and date filter, then add the GROUP BY to validate aggregation and then go with additional aggregate functions."),(0,l.kt)("li",{parentName:"ol"},"All calculated values require an ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-select#aliasing-with-as"},"alias"),"."),(0,l.kt)("li",{parentName:"ol"},"Pick the right ",(0,l.kt)("a",{parentName:"li",href:"/docs/sql/sfmc-sql-join#join-types"},"type of JOIN")," and correct set of joining rules so that you get precisely those rows that you need (limit the fan-out created by the possibility of many bounces per single send)."),(0,l.kt)("li",{parentName:"ol"},"When building the date filter, the output will be completely different depending on which date you use (hopefully, not every send will have a bounce)."),(0,l.kt)("li",{parentName:"ol"},"Unfortunately, in SFMC, you cannot use alias in WHERE/HAVING/ORDER BY and similar places - you have to use the function/calculation."),(0,l.kt)("li",{parentName:"ol"},"When calculating Bounce Rate, do it so that the outcome is an integer equal to a percent.")),(0,l.kt)("p",null,"Important: Because of the Query Studio bug, you cannot have spaces around the multiplication symbol (",(0,l.kt)("inlineCode",{parentName:"p"},"*"),"); otherwise, you will see an error related to a bad practice blanket SELECTs.")),(0,l.kt)(s.Z,{value:"solution",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="Solution working on Parent Business Unit"',title:'"Solution',working:!0,on:!0,Parent:!0,Business:!0,'Unit"':!0},"SELECT TOP 20\n      s.Domain\n    , COUNT(s.EventDate)    AS SendCount\n    , COUNT(b.EventDate)    AS BounceCount\n    , COUNT(b.EventDate)*100/COUNT(s.EventDate) AS BounceRate\nFROM _Sent AS s\n    LEFT JOIN _Bounce AS b\n        ON b.JobID = s.JobID\n        AND b.ListID = s.ListID\n        AND b.BatchID = s.BatchID\n        AND b.SubscriberID = s.SubscriberID\n        AND b.IsUnique = 1\nWHERE s.EventDate >= DATEADD(MONTH, -1, GETDATE())\nGROUP BY s.Domain\nHAVING COUNT(s.EventDate) >= 100\nORDER BY COUNT(b.EventDate)*100/COUNT(s.EventDate) DESC\n")),(0,l.kt)("p",null,"Bonus: This query might be performance heavy. One option to make it perform better is to shorten the timeframe in the WHERE filter. Another would be to split this query into two - one getting cumulative counts and the second responsible for doing math for Bounce Rate. Also, check how the numbers change when selecting only Hard Bounces."))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"level-7---coming-soon-ish"},"Level 7 - coming soon-ish"),(0,l.kt)("p",null,"I will add more levels once I finish writing supporting learning materials :)"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"writing-with-style"},"Writing with style"),(0,l.kt)("p",null,"Knowing the available functions is one thing. Writing good and readable queries - another. Salesforce Marketing Cloud is always a team sport, so be sure to leverage the power of a ",(0,l.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-style-guide"},"Style Guide")," to improve the quality of your SQL."),(0,l.kt)("h2",{id:"order-of-operations"},"Order of operations"),(0,l.kt)("p",null,"One of the key things to remember when building more complex queries is the order of operations, as it will decide what is in the output:"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-from"},(0,l.kt)("inlineCode",{parentName:"a"},"FROM"))," > ",(0,l.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-where"},(0,l.kt)("inlineCode",{parentName:"a"},"WHERE"))," > ",(0,l.kt)("a",{parentName:"p",href:"#group-by"},(0,l.kt)("inlineCode",{parentName:"a"},"GROUP BY"))," > ",(0,l.kt)("a",{parentName:"p",href:"#having"},(0,l.kt)("inlineCode",{parentName:"a"},"HAVING"))," > ",(0,l.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-select#distinct"},(0,l.kt)("inlineCode",{parentName:"a"},"DISTINCT"))," > ",(0,l.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-select#top-with-order-by"},(0,l.kt)("inlineCode",{parentName:"a"},"ORDER BY"))),(0,l.kt)("p",null,"It means that rows filtered with ",(0,l.kt)("inlineCode",{parentName:"p"},"WHERE")," will not be considered for ",(0,l.kt)("inlineCode",{parentName:"p"},"GROUP BY")," and that ",(0,l.kt)("inlineCode",{parentName:"p"},"DISTINCT")," deduplication will be applied to results grouped and filtered by ",(0,l.kt)("inlineCode",{parentName:"p"},"HAVING")," - not the source data."),(0,l.kt)("h2",{id:"all-sql-guides"},"All SQL Guides"),(0,l.kt)(o.Z,{mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);