"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[3175],{4137:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>h});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function r(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=a.createContext({}),m=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),u=m(i),c=n,h=u["".concat(s,".").concat(c)]||u[c]||d[c]||o;return i?a.createElement(h,l(l({ref:t},p),{},{components:i})):a.createElement(h,l({ref:t},p))}));function h(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,l=new Array(o);l[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[u]="string"==typeof e?e:n,l[1]=r;for(var m=2;m<o;m++)l[m]=i[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,i)}c.displayName="MDXCreateElement"},1872:(e,t,i)=>{i.d(t,{m:()=>o});var a=i(7294);const n="leadText_qzwo",o=e=>{let{content:t}=e;return a.createElement(a.Fragment,null,a.createElement("p",{id:n},t))}},5813:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=i(7462),n=(i(7294),i(4137)),o=i(1872);const l={id:"is-open-time-email",title:"IS Open Time Email",sidebar_label:"Open Time Email",description:"Personalise your SFMC emails with the next best action recommendations. In real-time. Even after delivery. Magic.",image:"img/og/og-image-interaction-studio-open-time-email.png",tags:["Interaction Studio","Personalisation","Email"]},r=void 0,s={unversionedId:"interaction-studio/is-open-time-email",id:"interaction-studio/is-open-time-email",title:"IS Open Time Email",description:"Personalise your SFMC emails with the next best action recommendations. In real-time. Even after delivery. Magic.",source:"@site/docs/interaction-studio/is-open-time-email.mdx",sourceDirName:"interaction-studio",slug:"/interaction-studio/is-open-time-email",permalink:"/docs/interaction-studio/is-open-time-email",draft:!1,editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/interaction-studio/is-open-time-email.mdx",tags:[{label:"Interaction Studio",permalink:"/docs/tags/interaction-studio"},{label:"Personalisation",permalink:"/docs/tags/personalisation"},{label:"Email",permalink:"/docs/tags/email"}],version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1678779410,formattedLastUpdatedAt:"Mar 14, 2023",frontMatter:{id:"is-open-time-email",title:"IS Open Time Email",sidebar_label:"Open Time Email",description:"Personalise your SFMC emails with the next best action recommendations. In real-time. Even after delivery. Magic.",image:"img/og/og-image-interaction-studio-open-time-email.png",tags:["Interaction Studio","Personalisation","Email"]},sidebar:"docs",previous:{title:"Catalog Objects Architecture",permalink:"/docs/interaction-studio/is-catalog-architecture"}},m={},p=[{value:"What is Open Time Email Campaign",id:"what-is-open-time-email-campaign",level:2},{value:"Open Time Email Template",id:"open-time-email-template",level:2},{value:"Basic OTE Template",id:"basic-ote-template",level:3},{value:"Attributes vs Custom Fields",id:"attributes-vs-custom-fields",level:3},{value:"Formatting values",id:"formatting-values",level:3},{value:"Fallback for null values",id:"fallback-for-null-values",level:3},{value:"Conditional content with if/else",id:"conditional-content-with-ifelse",level:3},{value:"Example dynamic OTE Template",id:"example-dynamic-ote-template",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(o.m,{content:"Personalise your SFMC emails with the next best action recommendations. In real-time. Even after delivery. Magic.",mdxType:"LeadText"}),(0,n.kt)("h2",{id:"what-is-open-time-email-campaign"},"What is Open Time Email Campaign"),(0,n.kt)("p",null,"In short, Open Time Email Campaign in Interaction Studio (SFMC Personalization) is a solution for providing ",(0,n.kt)("strong",{parentName:"p"},"always up-to-date"),", personalised recommendations to your customers."),(0,n.kt)("p",null,"The general rule of email communication is that the moment you send the email, you lose control and cannot make any changes (just like with paper mail). There are, however, two exceptions:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Links")," - you cannot change the URL used in the email, but (if you use wrapper/tracking links), you can change the final target URL. In Marketing Cloud, it is done via ",(0,n.kt)("a",{parentName:"li",href:"https://help.salesforce.com/s/articleView?id=sf.mc_es_update_joblinks_overview.htm"},"updating Job Links"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Images")," - you cannot change the URL of the image used in the email, but you can change the image that is hosted behind that URL. It is precisely what the Open Time Email feature in Interaction Studio is all about.")),(0,n.kt)("p",null,"It consists of two parts. In ",(0,n.kt)("strong",{parentName:"p"},"Open Time Email Template"),", you define the format of the recommendation (dimensions, content, personalisations). Then in ",(0,n.kt)("strong",{parentName:"p"},"Open Time Email Campaign"),", you use that template with selected recommendations logic (Einstein Recipe) to automatically generate HTML that will render the ever-updating Next Best Action in your emails. But..."),(0,n.kt)("p",null,"There are three caveats:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Open Time Email recommendation is an image (that's the only way to enable updating after sending), which means that the inboxes that hide images by default will not display the recommendations."),(0,n.kt)("li",{parentName:"ol"},"Some inboxes cache images. In this case, the customer might not see the updates to the recommendation, or they might be delayed."),(0,n.kt)("li",{parentName:"ol"},"Apple Mail Privacy blocks the magic behind the Open Time Email and falls back to a static recommendation generated on send time.")),(0,n.kt)("p",null,"With that out of the way, let's dive into what is officially possible and what is possible with Interaction Studio Open Time Email."),(0,n.kt)("h2",{id:"open-time-email-template"},"Open Time Email Template"),(0,n.kt)("p",null,"To create an Open Time Email Campaign, first, you need to code the structure of the recommendation with HTML, CSS and personalisations. Interaction Studio will use it to generate the image on the fly."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Good thing"),": because this HTML will be used for image generation and will not be available in the final Campaign, you are not limited to markup supported by Email clients."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Bad thing"),": because IS will use this HTML for image generation, you are not able to leverage custom fonts - there are only ",(0,n.kt)("a",{parentName:"p",href:"https://doc.evergage.com/display/EKB/Create+Open-Time+Item+Templates#CreateOpenTimeItemTemplates-AvailableFontsforEmail"},"17 built-in western")," and ",(0,n.kt)("a",{parentName:"p",href:"https://developer.evergage.com/campaign-development/email-campaigns-and-templates/render-non-western-characters"},"4 non-western")," fonts to choose from."),(0,n.kt)("p",null,"To start building the template, you need to provide the dimensions of the final image. It is super important because once you select and save those, you won't be able to edit them. Those dimensions are for the recommendation image only - you will be configuring the whole campaign dimensions separately in the Open Time Email Campaign configuration, so leave some pixels for whitespace."),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},'Open Time Email code editor isn\'t very robust and likes to crash completly if there is a "wrong" set of characters for it to preview. I recommend writing code outside and just copy-pasting it into OTE for validation to not lose the work progress.')),(0,n.kt)("h3",{id:"basic-ote-template"},"Basic OTE Template"),(0,n.kt)("p",null,"Building the template requires basic HTML & CSS knowledge and leveraging the built-in ",(0,n.kt)("inlineCode",{parentName:"p"},"Insert {Dynamic}")," personalisation option to connect the code boilerplate with catalog data."),(0,n.kt)("p",null,"The most popular boilerplate will leverage product image, name and price plus a call to action. The basic approach could look like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<div style="padding:10px; text-align:center; font-family: Arial;">\n    <img src="${item.imageUrl}" style="max-width:180px; max-height:150px;">\n    <div style="text-align:left;">\n        ${item.name}\n    </div>\n    <div style="margin-top:5px; text-align:left;">\n        $currency.format(${item.price})\n    </div>\n    <div style="position:absolute; left: 0px; right: 0px; bottom: 10px;">\n        <button style="border:none; padding: 10px; background:#1D73C9; color:#ffffff; font-size:16px;">\n            Buy now \xbb\n        </button>\n    </div>\n</div>\n')),(0,n.kt)("p",null,"You can see a whole section wrapped in a div that sets the font and padding for proper spacing and three key elements within it:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"img")," for displaying how the product looks (with ",(0,n.kt)("inlineCode",{parentName:"li"},"max-width")," & ",(0,n.kt)("inlineCode",{parentName:"li"},"max-height")," to control non-standard images)"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"div"),"s with name and price personalisation strings (we will talk about the format difference in a moment)"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"div")," with a button (we don't need any link because the whole final image will be a link)")),(0,n.kt)("p",null,"That's it. You can add more personalisation strings - including those using attributes defined on the catalog object. You can also write nicer HTML with a separate CSS style section (and either way - be sure to test the code a lot with edge cases from your catalog). But in the end - it will be just a boilerplate for an image you can preview directly in the editor."),(0,n.kt)("p",null,'It\'s okay, but you can quickly come up with the "what if..." scenarios (f.e. showing both current price and listPrice only if there is a promotion or displaying a placeholder if the image is broken) that would require a bit more control over the template. Thankfully, some undocumented features can solve those needs.'),(0,n.kt)("h3",{id:"attributes-vs-custom-fields"},"Attributes vs Custom Fields"),(0,n.kt)("p",null,"When you select ",(0,n.kt)("inlineCode",{parentName:"p"},"Insert {Dynamic}"),", you will find both Attributes and Custom Field options at the bottom of the picklist."),(0,n.kt)("p",null,"That differentiation is a mess, as depending on the product value, you can use one, two or all three:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Difference in scope"',title:'"Difference',in:!0,'scope"':!0},"// ID\n${item.id}                              // Returns Product ID\n${item.attributes.published.value}      // Error generating preview image: Unfulfilled variable\n${item.custom.customDatetime}           // Error generating preview image: Unfulfilled variable\n\n// Name\n${item.name}                            // Returns Product Name\n${item.attributes.name.value}           // Returns Product Name\n${item.custom.name}                     // Returns Product Name\n\n// Published Date\n${item.published}                       // Returns Product Published Date\n${item.attributes.published.value}      // Returns Product Published Date\n${item.custom.published}                // Error generating preview image: Unfulfilled variable\n")),(0,n.kt)("p",null,"To make it even more chaotic, the formatting of the output might be different:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Difference in output"',title:'"Difference',in:!0,'output"':!0},"${item.published}                       // Wed Nov 30 23:00:00 UTC 2022\n${item.attributes.published.value}      // 1669849200000\n\n${item.attributes.customDatetime.value} // 1672182000000\n${item.custom.customDatetime}           // 2022-12-27T23:00:00.000Z\n")),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"While the ",(0,n.kt)("inlineCode",{parentName:"p"},"Insert {Dynamic}")," will suggest you should use ",(0,n.kt)("inlineCode",{parentName:"p"},"${item.attributes.xxxx.value}")," notation for custom attributes, this is not always true."),(0,n.kt)("p",{parentName:"admonition"},'If you try this style for an Object or MultiString (Array) attribute, it will instead crash with: "Error generating preview image: Failed to render DMC for template ',"[","email","]",'".'),(0,n.kt)("p",{parentName:"admonition"},"IS will display the value correctly if you drop the ",(0,n.kt)("inlineCode",{parentName:"p"},".value")," suffix from the personalisation string: ",(0,n.kt)("inlineCode",{parentName:"p"},"${item.attributes.MultiStringAttribute}"),".")),(0,n.kt)("h3",{id:"formatting-values"},"Formatting values"),(0,n.kt)("p",null,"Unfortunately, the only working formatting option I was able to find is the currency one available by default for price and listPrice personalisations:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"$currency.format(${item.listPrice})\n")),(0,n.kt)("p",null,"Currency formatting isn't limited to those built-in values, and you can leverage it also for any custom integer or decimal attribute:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"$currency.format(${item.attributes.decimalAttribute.value})\n")),(0,n.kt)("p",null,"There is also a pseudo-formatting hack for datetime fields, but it is lacking:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Various datetime outputs"',title:'"Various',datetime:!0,'outputs"':!0},"${item.published}                       // Wed Nov 30 23:00:00 UTC 2022\n${item.attributes.published.value}      // 1669849200000\n\n${item.attributes.customDatetime.value} // 1672182000000\n${item.custom.customDatetime}           // 2022-12-27T23:00:00.000Z\n")),(0,n.kt)("p",null,"As you can see, the built-in datetime attributes return a semi-readable date, ",(0,n.kt)("inlineCode",{parentName:"p"},"item.attributes")," is outputting epoch timestamp (for both built-in and custom attributes) and the ",(0,n.kt)("inlineCode",{parentName:"p"},"item.custom")," returns the full ISO format. Neither is remotely useful for Open Time Email..."),(0,n.kt)("p",null,"Applying the ",(0,n.kt)("inlineCode",{parentName:"p"},".getDate()")," or ",(0,n.kt)("inlineCode",{parentName:"p"},".substring()")," methods leads to an error."),(0,n.kt)("h3",{id:"fallback-for-null-values"},"Fallback for null values"),(0,n.kt)("p",null,"The first problem you may encounter with the official implementation is crashing on ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," values. If you want to leverage a product attribute for personalisation (for example, the brand with ",(0,n.kt)("inlineCode",{parentName:"p"},"${item.attributes.brand.value}"),'), products missing this value will error out with "Error generating preview image: Unfulfilled variable".'),(0,n.kt)("p",null,"Thankfully, there is a solution for it - a ",(0,n.kt)("inlineCode",{parentName:"p"},"#field()")," function:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"#field(${item.attributes.brand.value}, 'Fallback Value')\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"#field()")," functions expect two parameters:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The personalisation you want to use"),(0,n.kt)("li",{parentName:"ol"},"The fallback value. It can be either a string or another variable. However, you cannot nest the ",(0,n.kt)("inlineCode",{parentName:"li"},"#field()")," function as a parameter of the ",(0,n.kt)("inlineCode",{parentName:"li"},"#field()")," function, so if you decide to use another variable, be sure it is filled in for all the products.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Field function with two variables as parameters"',title:'"Field',function:!0,with:!0,two:!0,variables:!0,as:!0,'parameters"':!0},"#field(${item.attributes.customPromotionalImageUrl.value}, ${item.imageUrl})\n")),(0,n.kt)("p",null,"In most cases, the most useful way to use ",(0,n.kt)("inlineCode",{parentName:"p"},"#field()")," will be with fallback to an empty string, as it will just hide the personalisation from the image while protecting against the error:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Field function with empty fallback"',title:'"Field',function:!0,with:!0,empty:!0,'fallback"':!0},"#field(${item.attributes.brand.value}, '')\n")),(0,n.kt)("p",null,"If you want to add a fallback for formatted currency value, you need to wrap it around the formatting function:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="Fallback for formatted custom decimal attribute"',title:'"Fallback',for:!0,formatted:!0,custom:!0,decimal:!0,'attribute"':!0},"#field($currency.format(${item.attributes.decimalAttribute.value}), '')\n")),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Once again, the MultiString attributes are problematic, as they are not considered ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," when empty and will show ",(0,n.kt)("inlineCode",{parentName:"p"},"[]")," instead (ignoring the fallback)."),(0,n.kt)("p",{parentName:"admonition"},"Empty Object fields fall back correctly when they are truly empty. However, once you fill them with a JSON Object, UI will no longer let you truly empty that field, forcing you to write at least ",(0,n.kt)("inlineCode",{parentName:"p"},"{}")," and leading to the same issue as with MultiString.")),(0,n.kt)("h3",{id:"conditional-content-with-ifelse"},"Conditional content with if/else"),(0,n.kt)("p",null,"Sometimes you need more than just a fallback for a ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," value. When it is not about the ",(0,n.kt)("inlineCode",{parentName:"p"},"null")," or there are more conditions to check, ",(0,n.kt)("inlineCode",{parentName:"p"},"if"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"else")," is the best. Thankfully, it also can be leveraged in OTE:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'{3,7} title="Show strike-through listPrice only if the current price is lower"',"{3,7}":!0,title:'"Show',"strike-through":!0,listPrice:!0,only:!0,if:!0,the:!0,current:!0,price:!0,is:!0,'lower"':!0},'<div style="text-align:left;">\n    $currency.format(${item.price})\n    \x3c!-- #if(${item.listPrice} > ${item.price}) --\x3e\n        <span style="font-size: 14px; text-decoration: line-through;">\n            $currency.format(${item.listPrice})\n        </span>\n    \x3c!-- #end --\x3e\n</div>\n')),(0,n.kt)("p",null,"As you can see, for the ",(0,n.kt)("inlineCode",{parentName:"p"},"if")," block you need to use HTML comment notation with ",(0,n.kt)("inlineCode",{parentName:"p"},"#if()")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"#end")," statements. The ",(0,n.kt)("inlineCode",{parentName:"p"},"#if()")," accepts parameters that return a boolean, just as in ",(0,n.kt)("a",{parentName:"p",href:"/docs/js/js-if-and-switch"},"JavaScript ",(0,n.kt)("inlineCode",{parentName:"a"},"if")),"."),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The Object and MultiString attributes do not work correctly with ",(0,n.kt)("inlineCode",{parentName:"p"},"if"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"else")," statements."),(0,n.kt)("p",{parentName:"admonition"},"If you test Object or MultiString with basic ",(0,n.kt)("inlineCode",{parentName:"p"},"#if(${item.attributes.attributeName})"),", it will be treated as true even for an empty field. And even though ",(0,n.kt)("inlineCode",{parentName:"p"},"${item.attributes.MultiStringAttribute}")," will output ",(0,n.kt)("inlineCode",{parentName:"p"},"[]")," doing ",(0,n.kt)("inlineCode",{parentName:"p"},"#if(${item.attributes.attributeName} == [])")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"#if(${item.attributes.attributeName} == '[]')")," will return false.")),(0,n.kt)("p",null,"You can add more condition-based paths with ",(0,n.kt)("inlineCode",{parentName:"p"},"#else"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'{3} title="If imageUrl is not proper .jpg link, display placeholder image"',"{3}":!0,title:'"If',imageUrl:!0,is:!0,not:!0,proper:!0,".jpg":!0,"link,":!0,display:!0,placeholder:!0,'image"':!0},'\x3c!-- #if (${item.imageUrl} && ${item.imageUrl.endsWith(\'.jpg\')}) --\x3e\n    <img src="${item.imageUrl}" style="max-width:180px; max-height:150px;">\n\x3c!-- #else --\x3e\n    <img src="https://mateuszdabrowski.pl/placeholder-image.jpg" style="max-width:180px; max-height:150px;">\n\x3c!-- #end --\x3e\n')),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"While the ",(0,n.kt)("inlineCode",{parentName:"p"},"if"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"else")," block in the Open Time Email Template works similarly to what you may know from JavaScript or SSJS, it has one huge disadvantage - it is evaluating code in all paths."),(0,n.kt)("p",{parentName:"admonition"},"It means that even if IS is not using a path for the final image generation, the code written there can still error out the whole Campaign. Example:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'{2} title="Will error out for a product without Brand"',"{2}":!0,title:'"Will',error:!0,out:!0,for:!0,a:!0,product:!0,without:!0,'Brand"':!0},"\x3c!-- #if(${item.attributes.brand.value} && !${item.attributes.categoryName.value}) --\x3e\n    ${item.attributes.brand.value}\n\x3c!-- #end --\x3e\n")),(0,n.kt)("p",{parentName:"admonition"},"Even with checking whether there is a value behind the Brand attribute and only then personalising it, a template with such code would still error out for products without a brand."),(0,n.kt)("p",{parentName:"admonition"},"Always use ",(0,n.kt)("a",{parentName:"p",href:"#fallback-for-null-values"},"fallbacks")," along with ",(0,n.kt)("inlineCode",{parentName:"p"},"if"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"else")," blocks:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'{2} title="Will NOT error out for a product without Brand"',"{2}":!0,title:'"Will',NOT:!0,error:!0,out:!0,for:!0,a:!0,product:!0,without:!0,'Brand"':!0},"\x3c!-- #if(${item.attributes.brand.value} && !${item.attributes.categoryName.value}) --\x3e\n    #field(${item.attributes.brand.value}, '')\n\x3c!-- #end --\x3e\n"))),(0,n.kt)("h2",{id:"example-dynamic-ote-template"},"Example dynamic OTE Template"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="OTE Template with image fallback, null attribute fallbacks and conditional promo price display"',title:'"OTE',Template:!0,with:!0,image:!0,"fallback,":!0,null:!0,attribute:!0,fallbacks:!0,and:!0,conditional:!0,promo:!0,price:!0,'display"':!0},'<div style="padding:10px; text-align:center; font-family:Arial; font-size:16px;">\n    \x3c!-- #if (${item.imageUrl} && ${item.imageUrl.endsWith(\'.jpg\')}) --\x3e\n        <img src="${item.imageUrl}" style="max-width:180px; max-height:150px;">\n    \x3c!-- #else --\x3e\n        <img src="https://mateuszdabrowski.pl/placeholder-image.jpg" style="max-width:180px; max-height:150px;">\n    \x3c!-- #end --\x3e\n    <div style="text-align:left;">\n        <span style="font-size:14px; color:#212121;">\n            #field(${item.attributes.categoryName.value}, \'\')\n        </span>\n        \x3c!-- #if (!${item.attributes.categoryName.value}) --\x3e\n            <br />\n        \x3c!-- #end --\x3e\n        <span style="margin-top:5px; overflow:hidden; text-overflow:ellipsis; display:-webkit-box; -webkit-line-clamp:2; -webkit-box-orient:vertical;">\n            #field(${item.attributes.brand.value}, \'\') $item.name\n        </span>\n    </div>\n    <div style="margin-top:5px; text-align:left;">\n        $currency.format(${item.price})\n        \x3c!-- #if(${item.listPrice} > ${item.price}) --\x3e\n            <span style="font-size:14px; color:#212121;text-decoration:line-through;">\n                $currency.format(${item.listPrice})\n            </span>\n        \x3c!-- #end --\x3e\n    </div>\n    <div style="position:absolute; left:0px; right:0px; bottom:10px;">\n        <button style="border:none; padding:10px; background-color:#1D73C9; color:#ffffff;">\n            Buy now \xbb\n        </button>\n    </div>\n</div>\n')))}c.isMDXComponent=!0}}]);