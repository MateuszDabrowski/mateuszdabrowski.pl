"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[3646],{4137:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>h});var i=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,i)}return a}function r(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,i,n=function(t,e){if(null==t)return{};var a,i,n={},o=Object.keys(t);for(i=0;i<o.length;i++)a=o[i],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)a=o[i],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=i.createContext({}),u=function(t){var e=i.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):r(r({},e),t)),a},c=function(t){var e=u(t.components);return i.createElement(s.Provider,{value:e},t.children)},d="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},p=i.forwardRef((function(t,e){var a=t.components,n=t.mdxType,o=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),d=u(a),p=n,h=d["".concat(s,".").concat(p)]||d[p]||m[p]||o;return a?i.createElement(h,r(r({ref:e},c),{},{components:a})):i.createElement(h,r({ref:e},c))}));function h(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=a.length,r=new Array(o);r[0]=p;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[d]="string"==typeof t?t:n,r[1]=l;for(var u=2;u<o;u++)r[u]=a[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1872:(t,e,a)=>{a.d(e,{m:()=>o});var i=a(7294);const n="leadText_qzwo",o=t=>{let{content:e}=t;return i.createElement(i.Fragment,null,i.createElement("p",{id:n},e))}},9554:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=a(7462),n=(a(7294),a(4137)),o=a(1872);const r={id:"is-catalog-architecture",title:"IS Catalog Architecture",sidebar_label:"Catalog Architecture",description:"Interaction Studio (MC Personalization) Catalog Objects architecture, data ingestion, limitations, tricks and tips. Build right from the start.",image:"img/og/og-image-interaction-studio-catalog-architecture.png",tags:["Interaction Studio","Personalisation","Setup","Data Management"],toc_max_heading_level:4},l=void 0,s={unversionedId:"interaction-studio/is-catalog-architecture",id:"interaction-studio/is-catalog-architecture",title:"IS Catalog Architecture",description:"Interaction Studio (MC Personalization) Catalog Objects architecture, data ingestion, limitations, tricks and tips. Build right from the start.",source:"@site/docs/interaction-studio/is-catalog-architecture.mdx",sourceDirName:"interaction-studio",slug:"/interaction-studio/is-catalog-architecture",permalink:"/docs/interaction-studio/is-catalog-architecture",draft:!1,editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/interaction-studio/is-catalog-architecture.mdx",tags:[{label:"Interaction Studio",permalink:"/docs/tags/interaction-studio"},{label:"Personalisation",permalink:"/docs/tags/personalisation"},{label:"Setup",permalink:"/docs/tags/setup"},{label:"Data Management",permalink:"/docs/tags/data-management"}],version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1679526230,formattedLastUpdatedAt:"Mar 22, 2023",frontMatter:{id:"is-catalog-architecture",title:"IS Catalog Architecture",sidebar_label:"Catalog Architecture",description:"Interaction Studio (MC Personalization) Catalog Objects architecture, data ingestion, limitations, tricks and tips. Build right from the start.",image:"img/og/og-image-interaction-studio-catalog-architecture.png",tags:["Interaction Studio","Personalisation","Setup","Data Management"],toc_max_heading_level:4},sidebar:"docs",previous:{title:"Interaction Studio",permalink:"/docs/category/interaction-studio"},next:{title:"Open Time Email",permalink:"/docs/interaction-studio/is-open-time-email"}},u={},c=[{value:"Catalog Basics &amp; Limitations",id:"catalog-basics--limitations",level:2},{value:"Catalog Data Sources",id:"catalog-data-sources",level:2},{value:"Why not both?",id:"why-not-both",level:3},{value:"Sitemap vs ETL",id:"sitemap-vs-etl",level:3},{value:"1. Interaction Studio with Sitemap",id:"1-interaction-studio-with-sitemap",level:4},{value:"2. Interaction Studio with ETL",id:"2-interaction-studio-with-etl",level:4},{value:"Recommended IS Catalog Data Source",id:"recommended-is-catalog-data-source",level:3},{value:"Catalog Attributes",id:"catalog-attributes",level:2},{value:"Catalog Built-in Attributes",id:"catalog-built-in-attributes",level:3},{value:"Basic Catalog Attributes",id:"basic-catalog-attributes",level:4},{value:"Location Catalog Attributes",id:"location-catalog-attributes",level:4},{value:"Promotion Settings Catalog Attributes",id:"promotion-settings-catalog-attributes",level:4},{value:"Product Catalog Unique Attributes",id:"product-catalog-unique-attributes",level:4},{value:"Category Catalog Unique Attributes",id:"category-catalog-unique-attributes",level:4},{value:"Catalog Custom Attributes",id:"catalog-custom-attributes",level:3},{value:"Custom Catalog Objects",id:"custom-catalog-objects",level:2},{value:"Promotions Related Catalog Object",id:"promotions-related-catalog-object",level:3},{value:"Features Related Catalog Objects",id:"features-related-catalog-objects",level:3},{value:"Custom Affinity Wheel",id:"custom-affinity-wheel",level:3},{value:"Catalog Tips &amp; Tricks",id:"catalog-tips--tricks",level:2},{value:"When IS recommends an Item?",id:"when-is-recommends-an-item",level:3},{value:"Items missing in IS Catalog",id:"items-missing-in-is-catalog",level:3},{value:"Data is not added to IS Catalog",id:"data-is-not-added-to-is-catalog",level:3},{value:"Export full IS Catalog data",id:"export-full-is-catalog-data",level:3},{value:"View archived Items in the IS Catalog",id:"view-archived-items-in-the-is-catalog",level:3}],d={toc:c},m="wrapper";function p(t){let{components:e,...a}=t;return(0,n.kt)(m,(0,i.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)(o.m,{content:"Interaction Studio (SFMC Personalization) Catalog Objects architecture, data ingestion, limitations, tricks and tips. Build right from the start.",mdxType:"LeadText"}),(0,n.kt)("h2",{id:"catalog-basics--limitations"},"Catalog Basics & Limitations"),(0,n.kt)("p",null,"The purpose of the Interaction Studio Catalog is to store your asseet data along with interconnecting relationships for personalisation and machine learning purposes."),(0,n.kt)("p",null,"There are five out-of-the-box objects: Products, Articles, Blog Posts, Categories and Promotions. You can also create ",(0,n.kt)("strong",{parentName:"p"},"up to 25 custom")," Catalog Objects."),(0,n.kt)("p",null,"Each Object contains some built-in attributes (like Name, URL, Description, Promotable) and can be extended with custom attributes up to a ",(0,n.kt)("strong",{parentName:"p"},"total of 35 attributes")," on an Object."),(0,n.kt)("p",null,"All of the above can be stitched together using prebuilt and custom relationships between Catalog Objects (for example, the built-in relationship between a Product and a Category) - allowing for connections of ",(0,n.kt)("strong",{parentName:"p"},"up to 15 Categories per Item")," and ",(0,n.kt)("strong",{parentName:"p"},"up to 50 related Catalog Object values per Item"),"."),(0,n.kt)("p",null,"With ",(0,n.kt)("strong",{parentName:"p"},"up to 2 000 000 Items per Catalog")," and ",(0,n.kt)("strong",{parentName:"p"},"up to 10 000 000 Items in total")," across all Catalogs, Interaction Studio provides a lot of flexibility to architect a Catalog of your dreams."),(0,n.kt)("p",null,"However, some quirks and features require more consideration to make the most out of Marketing Cloud Personalization capabilities. Especially as some wrong moves can be tough to reverse. Let's dive in."),(0,n.kt)("h2",{id:"catalog-data-sources"},"Catalog Data Sources"),(0,n.kt)("p",null,"There are three key sources of data for the Catalog:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Manual via UI")," - Good for checking data and performing minor fixes, but awful for data ingestion."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Web/Mobile SDK")," - Real-time, but performance-heavy and dependent on user behaviour."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"ETL Feed")," - Best performance and can cover the whole Catalog regardless of user behaviour, but can be updated at most every 15 minutes.")),(0,n.kt)("p",null,"So which one should you use - Sitemap or ETL?"),(0,n.kt)("h3",{id:"why-not-both"},"Why not both?"),(0,n.kt)("p",null,"Mixing both sources is very tempting as it sounds like the best of both worlds. Unfortunately, it is not recommended approach due to Interaction Studio's backend limitations. Sending the same Items through both channels impacts performance, creates concurrency and can lead to incorrect and not-so-easy-to-fix issues with your Catalog."),(0,n.kt)("p",null,"For example, if you control the Exclusion and Eligibility of the Products using Sitemap and the ",(0,n.kt)("inlineCode",{parentName:"p"},"promotable")," attribute, the ETL won't be able to overwrite it (despite officially having higher priority as a data source). It can quickly lead to considerable discrepancies in Product availability for recommendations. Due to that, I recommend enabling Strict Catalog Security setting to protect your Catalog integrity if you are using ETL."),(0,n.kt)("p",null,"Another issue related to mixing is functional differences between the sources. For example, Sitemap and Category ETL use ",(0,n.kt)("a",{parentName:"p",href:"https://issues.salesforce.com/issue/a028c00000gAwJyAAK/interaction-studio-not-correctly-displaying-category-hierarchy"},"different mechanisms for building hierarchy")," that are not compatible with each other."),(0,n.kt)("p",null,"To sum up - do not mix Sitemap and ETL. And if you have to - do not mix Sitemap and ETL on the same Object. And if you have to - do not mix Sitemap and ETL for the promotable and archived attributes. But really, do not mix it."),(0,n.kt)("h3",{id:"sitemap-vs-etl"},"Sitemap vs ETL"),(0,n.kt)("p",null,"Assuming you want to keep things clean, you have two options:"),(0,n.kt)("h4",{id:"1-interaction-studio-with-sitemap"},"1. Interaction Studio with Sitemap"),(0,n.kt)("p",null,"Pros:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You need Sitemap either way."),(0,n.kt)("li",{parentName:"ul"},"The updates will happen in real-time once the User views the Item."),(0,n.kt)("li",{parentName:"ul"},"You can build a ",(0,n.kt)("a",{parentName:"li",href:"https://issues.salesforce.com/issue/a028c00000gAwJyAAK/interaction-studio-not-correctly-displaying-category-hierarchy"},"drill-down Category hierarchy")," in the UI.")),(0,n.kt)("p",null,"Cons:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Sitemap will be more complex - depending on where the Catalog details are available on the website (dataLayer, JSON LD, HTML), getting them might get convoluted and impact the performance of your data capture and Campaigns."),(0,n.kt)("li",{parentName:"ul"},"Changes to the website can break your data capture (for example, updates to breadcrumb attributes or dataLayer structure)."),(0,n.kt)("li",{parentName:"ul"},"Catalog gets updated only when a user views an Item, which creates a risk of incorrect recommendations for less-visited Items."),(0,n.kt)("li",{parentName:"ul"},"Can trigger massive amounts of concurrent updates for high-traffic Items."),(0,n.kt)("li",{parentName:"ul"},"Cannot overwrite Multistring Object attributes and relationships (like Category) - Sitemap can only append."),(0,n.kt)("li",{parentName:"ul"},"Catalog can be manipulated from the front end by malicious actors.")),(0,n.kt)("h4",{id:"2-interaction-studio-with-etl"},"2. Interaction Studio with ETL"),(0,n.kt)("p",null,"Pros:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Full Catalog upsert possible every 15 minutes (delta files recommended)."),(0,n.kt)("li",{parentName:"ul"},"Full control over final Catalog values - regardless of Item page visits."),(0,n.kt)("li",{parentName:"ul"},"Better control over ",(0,n.kt)("a",{parentName:"li",href:"/docs/interaction-studio/snippets/is-catalog-etl-metadata-viewer"},"history of value changes")," and easier debugging."),(0,n.kt)("li",{parentName:"ul"},"Much better performance, especially for bigger Catalogs."),(0,n.kt)("li",{parentName:"ul"},"More secure with Strict Catalog Security option ",(0,n.kt)("br",null)," ",(0,n.kt)("strong",{parentName:"li"},"WARNING"),": A bug currently stops Add To Cart and Purchase actions from being associated with Categories with this setting enabled."),(0,n.kt)("li",{parentName:"ul"},"Much more lean and performant Sitemap.")),(0,n.kt)("p",null,"Cons:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Require you to export data in a particularly formatted .csv to IS SFTP."),(0,n.kt)("li",{parentName:"ul"},"Not real-time (but every 15 minutes is pretty damn close, come on!)."),(0,n.kt)("li",{parentName:"ul"},"Doesn't support ",(0,n.kt)("a",{parentName:"li",href:"../../../sites/ideas/interaction-studio-ideas#full-is--mcp-category-hierarchy-support-for-etl"},"drill-down Category hierarchy")," in the UI",(0,n.kt)("sup",null,(0,n.kt)("a",{parentName:"li",href:"#category-catalog-unique-attributes"},"*")),".")),(0,n.kt)("h3",{id:"recommended-is-catalog-data-source"},"Recommended IS Catalog Data Source"),(0,n.kt)("p",null,"Considering the above, ETL seems like an obvious choice. And it nearly is. I see only two scenarios where we should choose Sitemap to populate the Catalog (spoiler alert, you should try to overcome those scenarios as much as possible):"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"You must have Item (especially Product) updates in real-time.")),(0,n.kt)("p",null,"For example, due to swift changes in the price based on demand. Or due to having single-stock items that need to be pulled quickly from the recommendations (unfortunately, Purchase action does not adjust the stock). Consider this only if it is crucial for your business. Otherwise, the 15-minute cadence with ETL is close and lets you benefit from all the good things."),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"You cannot schedule a correctly prepared .csv file to Interaction Studio SFTP.")),(0,n.kt)("p",null,"In most cases, your systems already use flat files and FTPs for communication, and you can extend the architecture to cover Interaction Studio. If not, many tools can help you transform your data cleanly into a nice .csv and add it to Marketing Cloud Personalization Feed with the correct naming convention. You can even leverage Marketing Cloud's Automation Studio to prepare and deliver the files in the proper format! But sometimes data is just not there - and then, ETL is a no-go."),(0,n.kt)("p",null,"While you can begin with Sitemap and then migrate to the ETL approach, the transitory period may be problematic due to issues described in the ",(0,n.kt)("a",{parentName:"p",href:"#why-not-both"},"Why not both?")," section above. I recommend finding a workaround and starting with the better option."),(0,n.kt)("mermaid",{value:"flowchart TD\n source[(Catalog Data Source)]\n is[(Interaction Studio Catalog)]:::success\n isRealTimeNeeded{{Do you need real-time updates?}}:::check\n isEtlTooSlow{{Is update every 15 minutes really too slow?}}:::check\n canPrepareFile{{Can you schedule a .csv export to IS SFTP?}}:::check\n etl[Use ETL]:::process\n sitemap[Use Sitemap]:::process\n\n source --\x3e isRealTimeNeeded\n isRealTimeNeeded --\x3e|Yes| isEtlTooSlow\n isRealTimeNeeded --\x3e|No| canPrepareFile\n isEtlTooSlow --\x3e|No| etl\n isEtlTooSlow --\x3e|Yes| sitemap\n canPrepareFile --\x3e|No| sitemap\n canPrepareFile --\x3e|Yes| etl\n sitemap --\x3e is\n etl --\x3e is\n\n classDef success fill:#1d73c9,color:#ffffff\n classDef check fill:#f6b355,color:#ffffff\n classDef process fill:#333333,color:#ffffff"}),(0,n.kt)("p",null,"Once you know how to populate the Interaction Studio Catalog, it's time to decide what you will be filling in."),(0,n.kt)("h2",{id:"catalog-attributes"},"Catalog Attributes"),(0,n.kt)("p",null,"Each Catalog provides a set of attributes available on each Item. You can use them to store the metadata about Products, Categories or other Objects - and you can leverage it for recommendations and personalisations. However, there are some quirks and features that need to be taken into consideration when planning the Catalog Architecture."),(0,n.kt)("h3",{id:"catalog-built-in-attributes"},"Catalog Built-in Attributes"),(0,n.kt)("p",null,"Let's start with what is available out of the box. There are three groups of available attributes (basic, location-based and promotion-related), plus a few special attributes unique to Product and Category Catalogs."),(0,n.kt)("h4",{id:"basic-catalog-attributes"},"Basic Catalog Attributes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,n.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ID"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Unique identifier for each Item"),(0,n.kt)("td",{parentName:"tr",align:null},"It must be unique per Object and can be reused in others (for example, you can use the same ID in Product and Category Objects).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Name"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Readable name of an Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Used to identify an Item across the UI. It does not have to be unique; you might have multiple Items with the same name. Required to recommend an Item.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"URL"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Link to the Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Redirect target when User clicks on an Item in a Campaign. Required to recommend an Item.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Image URL"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Link used to display an Image of an Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Used to showcase a Product. Required to recommend a Product (not needed for other Item types).")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Description"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Client-friendly description of an Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Any text beyond 200 characters will be replaced with an ellipsis (",(0,n.kt)("inlineCode",{parentName:"td"},"..."),").")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Average Rating"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal"),(0,n.kt)("td",{parentName:"tr",align:null},"Average score of an Item based on all Ratings"),(0,n.kt)("td",{parentName:"tr",align:null},"Useful as a filter for Einstein Recipes and Triggered Campaigns.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Number of Ratings"),(0,n.kt)("td",{parentName:"tr",align:null},"Integer"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of ratings an Item gathered"),(0,n.kt)("td",{parentName:"tr",align:null},"Can be used in Serverside Code to conditionally hide Rating personalisation when it is based on a single rating.")))),(0,n.kt)("p",null,"Out of the above Basic Catalog Attributes, the first four are the most important: ID, Name, URL, and Image URL. The Average Rating helps filter products for Campaigns. The rest might be helpful for personalization purposes, but can be skipped in most implementations."),(0,n.kt)("h4",{id:"location-catalog-attributes"},"Location Catalog Attributes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"City"),(0,n.kt)("td",{parentName:"tr",align:null},"String")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"State / Provine Code"),(0,n.kt)("td",{parentName:"tr",align:null},"String")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Postal Code"),(0,n.kt)("td",{parentName:"tr",align:null},"String")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Longitude"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Latitude"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Country Code"),(0,n.kt)("td",{parentName:"tr",align:null},"String")))),(0,n.kt)("p",null,"Location-based Attributes are niche but powerful. They are utterly useless for most implementations (as in most cases, the Item is either available in many locations or its location is irrelevant). However, for businesses offering unique, location-based Items (hotels, houses, unique Products), filling those attributes allows for location-based recommendations (triggered by either User or currently viewed Item geo data)."),(0,n.kt)("h4",{id:"promotion-settings-catalog-attributes"},"Promotion Settings Catalog Attributes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,n.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Published"),(0,n.kt)("td",{parentName:"tr",align:null},"Datetime"),(0,n.kt)("td",{parentName:"tr",align:null},"Availability start date for an Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Must be ",(0,n.kt)("inlineCode",{parentName:"td"},"null")," or in the past for Interaction Studio to recommend the Item. If you set a future date - The Item will not be promoted until then.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Expiration"),(0,n.kt)("td",{parentName:"tr",align:null},"Datetime"),(0,n.kt)("td",{parentName:"tr",align:null},"Availability end date for an Item"),(0,n.kt)("td",{parentName:"tr",align:null},"Must be ",(0,n.kt)("inlineCode",{parentName:"td"},"null")," or in the future for Interaction Studio to recommend the Item. Once you hit that date, the Item stops being recommended.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Promotable"),(0,n.kt)("td",{parentName:"tr",align:null},"Picklist"),(0,n.kt)("td",{parentName:"tr",align:null},"Marks whether Item should be Promoted"),(0,n.kt)("td",{parentName:"tr",align:null},"Items can be either Eligible or Excluded. Only Eligible ones will be returned in the recommendations, regardless of Published/Expiration values.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Archived"),(0,n.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"Marks whether Item should be Archived"),(0,n.kt)("td",{parentName:"tr",align:null},"Archived Items are treated as Excluded (won't be recommended) and are hidden from the Catalog UI.")))),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Published and Expiration fields (as all Interacton Studio date type fields) use ISO-8601 datetime formar. You must pass them as ",(0,n.kt)("inlineCode",{parentName:"p"},"2022-04-12T10:23:37Z"),"."),(0,n.kt)("p",{parentName:"admonition"},"If you want to push a datetime to Interaction Studio using ",(0,n.kt)("a",{parentName:"p",href:"#2-interaction-studio-with-etl"},"ETL"),", you can prepare the data with SQL using clean ",(0,n.kt)("a",{parentName:"p",href:"/docs/sql/sfmc-sql-date-functions#format-with-dates"},"FORMAT"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"FORMAT(YourDateField,'yyyy-MM-ddTHH:mm:ssZ')")," and output it to a String field type (Text, if we are talking SFMC Data Extension).")),(0,n.kt)("p",null,"Promotion-related attributes are crucial for controlling what Interaction Studio will recommend. They are also the most tricky ones, as they seem to be very similar to each other. Rule of thumb when selecting what to use:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"If you are frequently updating the Catalog (thanks to using ",(0,n.kt)("a",{parentName:"li",href:"#2-interaction-studio-with-etl"},"ETL"),"), go with the Promotable attribute."),(0,n.kt)("li",{parentName:"ol"},"If you have less control over when the update will come (due to using ",(0,n.kt)("a",{parentName:"li",href:"#1-interaction-studio-with-sitemap"},"Sitemap"),"), or need the recommendation to start/end at a particular time that is not perfectly aligned with your sync schedule, go with Published/Expiration attributes."),(0,n.kt)("li",{parentName:"ol"},"If you are sure you don't need an Item, archive it. But it is a last resort solution for incorrect data, not a general tool for managing Catalog content.")),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Archiving does not delete Items (there is no such option in Interaction Studio). It only hides them from the Catalog UI while preserving all its values. It has two significant ramifications:"),(0,n.kt)("ol",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ol"},"Interaction Studio still uses archived Items for the personalisation engine - especially as anchors for recommendations. For example, a campaign promoting Similar Items to the Item currently viewed will work on the archvied Item page (and leverage all its metadata). If you want to avoid it, clean all attributes and relationships before archiving."),(0,n.kt)("li",{parentName:"ol"},"You can't easily find archived items to make any changes or unarchive them. Find partial workarounds in the ",(0,n.kt)("a",{parentName:"li",href:"#view-archived-items-in-the-is-catalog"},"Tips & Tricks section"),"."))),(0,n.kt)("h4",{id:"product-catalog-unique-attributes"},"Product Catalog Unique Attributes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,n.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Units in Stock"),(0,n.kt)("td",{parentName:"tr",align:null},"Integer"),(0,n.kt)("td",{parentName:"tr",align:null},"Provides products Inventory Count"),(0,n.kt)("td",{parentName:"tr",align:null},"If the Product is available, but the exact stock is unknown, provide 1. Otherwise, it will not get recommended.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Alternate ID"),(0,n.kt)("td",{parentName:"tr",align:null},"Multistring"),(0,n.kt)("td",{parentName:"tr",align:null},"Pipe-separated SKUs for the Product"),(0,n.kt)("td",{parentName:"tr",align:null},"As there is no option to provide separate details for each SKU, it's pretty useless now.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Price"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal"),(0,n.kt)("td",{parentName:"tr",align:null},"Current price of the product"),(0,n.kt)("td",{parentName:"tr",align:null},"Used for personalization and Einstein Recipe price-based filtering. A price equal to 0 will block the Product from recommendations.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"List Price"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal"),(0,n.kt)("td",{parentName:"tr",align:null},"Full sticker price of the product"),(0,n.kt)("td",{parentName:"tr",align:null},"Useful for price drop personalization and Product Price Reduction Triggered Campaigns. Unfortunately, there is no Price Reduction Recipe ",(0,n.kt)("a",{parentName:"td",href:"../../../sites/ideas/interaction-studio-ideas#price-reduction-ingredient-in-einstein-recipes"},"yet"),".")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Price Description"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"Information about the current Price"),(0,n.kt)("td",{parentName:"tr",align:null},"You can pass here the promotion name that resulted in a lower Price for personalisation purposes.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Currency"),(0,n.kt)("td",{parentName:"tr",align:null},"String"),(0,n.kt)("td",{parentName:"tr",align:null},"ISO-4217 Currency Code"),(0,n.kt)("td",{parentName:"tr",align:null},"Required when you enable Product Localization and capture Product price in multiple currencies. To pass Currency, you need to pass it along with Locale.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Margin"),(0,n.kt)("td",{parentName:"tr",align:null},"Decimal"),(0,n.kt)("td",{parentName:"tr",align:null},"Profit margin on the Product"),(0,n.kt)("td",{parentName:"tr",align:null},"Useless.")))),(0,n.kt)("p",null,"As you can see, there are two must-have attributes - Units in Stock and Price - followed by one highly recommended for most implementations - List Price. The rest is either niche or useless."),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The Price attribute should reflect the current global price. Apply site-wide promotions to it, but don't change it to a Client-specific or voucher-based ones. The Product can have only one Price."),(0,n.kt)("p",{parentName:"admonition"},"Don't worry about the final, unique basket price. Cart and Purchase actions have a separate model for storing the Product price data allowing for per-customer uniqueness without impacting the global Product Catalog Price.")),(0,n.kt)("h4",{id:"category-catalog-unique-attributes"},"Category Catalog Unique Attributes"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,n.kt)("th",{parentName:"tr",align:null},"Data Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,n.kt)("th",{parentName:"tr",align:null},"Comment"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ID Path"),(0,n.kt)("td",{parentName:"tr",align:null},"Multistring"),(0,n.kt)("td",{parentName:"tr",align:null},"Stores Category hierarchy information"),(0,n.kt)("td",{parentName:"tr",align:null},"Each Category can have only one Parent Category, and the root (top-level) Category should have this field empty.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"Is Department"),(0,n.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,n.kt)("td",{parentName:"tr",align:null},"Marks root (top-level) Category"),(0,n.kt)("td",{parentName:"tr",align:null},"Used in Einstein Recipes for Department-based configurations.")))),(0,n.kt)("p",null,"Dedicated Category Catalog attributes focus on the hierarchical relationship between the Categories. This area is a bit of a mess in the Interaction Studio because it works differently depending on whether you use ",(0,n.kt)("a",{parentName:"p",href:"#2-interaction-studio-with-etl"},"ETL")," or ",(0,n.kt)("a",{parentName:"p",href:"#1-interaction-studio-with-sitemap"},"Sitemap"),"."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Sitemap-based hierarchy")," is using the ",(0,n.kt)("a",{parentName:"li",href:"#basic-catalog-attributes"},"basic ID attribute"),". It expects pipe-delimited IDs providing a full hierarchy path, so ",(0,n.kt)("inlineCode",{parentName:"li"},"Electronics")," (single ID) for root Category, ",(0,n.kt)("inlineCode",{parentName:"li"},"Electronics|Computers")," (two IDs pipe-delimited) for first-level child Category and so on for further levels (it can get quite long for deeper structures: ",(0,n.kt)("inlineCode",{parentName:"li"},"Electronics|Computers|Laptops|Ultrabooks"),"). It will unlock the visual hierarchy with tracking data rollups in the Category Catalog UI."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"ETL-based hierarchy")," uses the ID Path and Is Department attributes unique to Category Catalog. Each Category has a single ID, passes a single Parent ID (if it has a parent) or Is Department as True (if it doesn't have a parent) and based on the above, Interaction Studio generates the ID Path. It's cleaner, but it won't provide the nice visual hierarchy with tracking data rollups in the Category Catalog UI as the Sitemap option offers. I created an ",(0,n.kt)("a",{parentName:"li",href:"../../../sites/ideas/interaction-studio-ideas#full-is--mcp-category-hierarchy-support-for-etl"},"Idea to fix that"),".")),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Officially, there is no option to overcome the above limitations. If you try to push pipe-delimited IDs via Product ETL, they will be treated as separate values and assign the Product to multiple categories."),(0,n.kt)("p",{parentName:"admonition"},"However, if you dare, there is a workaround to eat a cookie and have a cookie. You can push Sitemap-style IDs via ETL and create the visual hierarchy in Category UI if you replace pipes with their hex code: ",(0,n.kt)("inlineCode",{parentName:"p"},"&#x7c;"),". So instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"Electronics|Computers|Laptops|Ultrabooks"),", you would have to push ",(0,n.kt)("inlineCode",{parentName:"p"},"Electronics&#x7c;Computers&#x7c;Laptops&#x7c;Ultrabooks"),"."),(0,n.kt)("p",{parentName:"admonition"},"Remember that it is not official or supported and can break anytime. Implementing it is risky. But for now, it works.")),(0,n.kt)("h3",{id:"catalog-custom-attributes"},"Catalog Custom Attributes"),(0,n.kt)("p",null,"Outside of the built-in attributes, you can go wild with custom ones until you hit 35 attributes of any type on a single Object. Those are great for personalization - crucial for an Open Time Email campaign where you don't have much wiggle room to manipulate the values."),(0,n.kt)("p",null,"Unfortunately, there is a considerable feature gap related to custom Catalog Attributes, limiting their usefulness. You cannot use them in Einstein Recipes to Include, Exclude, Boost or limit with Variations."),(0,n.kt)("p",null,"That's a huge letdown, but fear not. There is a workaround - custom Catalog Objects and Object relationships."),(0,n.kt)("h2",{id:"custom-catalog-objects"},"Custom Catalog Objects"),(0,n.kt)("p",null,"Let's start with the basics. You can create (up to 25) custom Catalog Objects that extend the out-of-the-box set of Products, Articles, Blog Posts, Categories and Promotions Objects. Like the built-in ones, custom Objects structure and group Items assigned to them."),(0,n.kt)("admonition",{title:"You Should Know",type:"note"},(0,n.kt)("p",{parentName:"admonition"},'Depending on where you look in the Interaction Studio, you might still see "Dimensions" - an old name for related Catalog Objects.')),(0,n.kt)("p",null,"Custom Catalog Objects have three superpowers:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},'You can create relationships between Items from various Catalogs (for example, between specific Products and specific colours in custom "Color" Catalog Object - this doesn\'t sound awesome now, but the following two points will show you that it is something completely different from custom Attributes).'),(0,n.kt)("li",{parentName:"ol"},"You can capture the affinity of each User towards those related Items (for example, how much each User likes specific colour)."),(0,n.kt)("li",{parentName:"ol"},"You can leverage them in Einstein Recipes in multiple ways.")),(0,n.kt)("p",null,"This set of features makes custom Catalog Objects a big deal when you want absolute control over your recommendations. Examples? Sure."),(0,n.kt)("h3",{id:"promotions-related-catalog-object"},"Promotions Related Catalog Object"),(0,n.kt)("p",null,'You want to recommend only the products that are on promotion. Create a custom Catalog Object "Promotions" with an Item "Promoted" and assign it (via ',(0,n.kt)("a",{parentName:"p",href:"#2-interaction-studio-with-etl"},"ETL")," or ",(0,n.kt)("a",{parentName:"p",href:"#1-interaction-studio-with-sitemap"},"Sitemap"),') to each deserving Product. Then you can use this information in Einstein Recipes \xbb Exclusion tab to Include the "Promotions" Catalog and select "Promoted" using "from explicit selection" option.'),(0,n.kt)("p",null,'You can even go a step further and create additional Items in that Catalog like "0-10%", "11-20%", "21-30%", etc., to be able to include (or prioritize in the Serverside Code of the template) more significant promotions.'),(0,n.kt)("p",null,'More? Extend that Catalog with specific promotion names like "BlackFriday", "CyberMonday", "SpeedyTuesday", "FreeDelivery", "AnotherPromotionBecauseWeNeedToCloseTheQuarterHigherToGetBonus" and assign those to all eligible products. Now you can create different Recipes for each promotion and show each customer the best products for their needs that are currently at a better price.'),(0,n.kt)("p",null,'Still not satisfied? Ask your database mages to calculate the standard deviation for each current price drop per Product or Category and use it to assign the "coolness factor" of the promotion. 10% on phone cases differs from 10% on the newest flagship smartphone. Use that to focus on the real treats in your recommendations.'),(0,n.kt)("p",null,'Just remember that a single relationship (like this "Promotions") can store a maximum of 50 values per Item (per specific Product in this case), so don\'t go overboard ;)'),(0,n.kt)("h3",{id:"features-related-catalog-objects"},"Features Related Catalog Objects"),(0,n.kt)("p",null,"Another widespread use case is to display products similar to the one currently viewed (especially when the Product is Out Of Stock)."),(0,n.kt)("p",null,"Sure, there is a Similar Items Ingredient in Einstein Recipes. Still, with custom Catalog Objects, you can bring it to the next level by sharing crucial specification details (like graphic card, storage, colour, price bracket) and returning recommendations of products that are genuinely a matching alternative - not just from the name."),(0,n.kt)("h3",{id:"custom-affinity-wheel"},"Custom Affinity Wheel"),(0,n.kt)("p",null,"Another excellent use case for custom Catalog Objects is related to the Affinity Wheel you can see when viewing a User Profile. By default, you will see four values: Category, Product Class, Brand and Color. While those are good choices for many brands, they are not always the perfect match for your business."),(0,n.kt)("p",null,"Thankfully, there is a (dirty) way to change it. You won't be able to swap Category (and that's fine, as it is a must-have one, in my opinion), but the other three are yours to take."),(0,n.kt)("p",null,"To make them whatever you want, create a custom Catalog Object with a special ID: Style, Brand or ItemClass. Use one of those and put what you want in the Name. Once you save it, Interaction Studio will show the Name and selected Items in the Affinity Wheel."),(0,n.kt)("p",null,"Unfortunately, you will have to use those hardcoded IDs for populating data via ",(0,n.kt)("a",{parentName:"p",href:"#2-interaction-studio-with-etl"},"ETL")," or ",(0,n.kt)("a",{parentName:"p",href:"#1-interaction-studio-with-sitemap"},"Sitemap"),". Not perfect, but it still makes your Affinity Wheel nice and valuable."),(0,n.kt)("h2",{id:"catalog-tips--tricks"},"Catalog Tips & Tricks"),(0,n.kt)("p",null,"There are some gotchas you can encounter when working with Interaction Studio Catalog. Here I gathered solutions to frequent problems and some undocumented tricks that can make your life easier."),(0,n.kt)("h3",{id:"when-is-recommends-an-item"},"When IS recommends an Item?"),(0,n.kt)("p",null,"Understanding when Interaction Studio decides to recommend an Item might not be that easy, as there are quite a lot of rules checked in the backend:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Four conditions related to special ",(0,n.kt)("a",{parentName:"li",href:"#promotion-settings-catalog-attributes"},"Promotion attributes"),":",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Item cannot be Archived"),(0,n.kt)("li",{parentName:"ul"},"Item must be Eligible"),(0,n.kt)("li",{parentName:"ul"},"Item cannot have Published date in the future"),(0,n.kt)("li",{parentName:"ul"},"Item cannot have Expiration date in the past"))),(0,n.kt)("li",{parentName:"ol"},"Two conditions related to key ",(0,n.kt)("a",{parentName:"li",href:"#basic-catalog-attributes"},"Basic attributes"),":",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Item must have Name"),(0,n.kt)("li",{parentName:"ul"},"Item must have URL"))),(0,n.kt)("li",{parentName:"ol"},"Three Product-only conditions related to that Object's ",(0,n.kt)("a",{parentName:"li",href:"#product-catalog-unique-attributes"},"Unique attributes"),":",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Product must have Image"),(0,n.kt)("li",{parentName:"ul"},"Product must have Price"),(0,n.kt)("li",{parentName:"ul"},"Product must have Inventory")))),(0,n.kt)("mermaid",{value:"flowchart TD\n item[(Item in Catalog)]\n recommendation([Recommended]):::success\n noRecommendation([Not recommended]):::fail\n isItemArchived{{Archived?}}:::check\n isItemPromotable{{Current Promotion State?}}:::check\n isItemBeforePublished{{Published date in the future?}}:::check\n isItemAfterExpired{{Expiration date in the past?}}:::check\n hasName{{Name filled?}}:::check\n hasURL{{URL filled?}}:::check\n isProduct{{Is it Product?}}:::check\n hasImage{{Image URL filled?}}:::check\n hasPrice{{Price > 0?}}:::check\n hasInventory{{Inventory Count > 0?}}:::check\n\n item --\x3e isItemArchived\n isItemArchived --\x3e|True| noRecommendation\n isItemArchived --\x3e|False| isItemPromotable\n isItemPromotable --\x3e|Excluded| noRecommendation\n isItemPromotable --\x3e|Eligible| isItemBeforePublished\n isItemBeforePublished --\x3e|Yes| noRecommendation\n isItemBeforePublished --\x3e|No| isItemAfterExpired\n isItemBeforePublished --\x3e|NULL| isItemAfterExpired\n isItemAfterExpired --\x3e|Yes| noRecommendation\n isItemAfterExpired --\x3e|No| hasName\n isItemAfterExpired --\x3e|NULL| hasName\n hasName --\x3e|No| noRecommendation\n hasName --\x3e|Yes| hasURL\n hasURL --\x3e|No| noRecommendation\n hasURL --\x3e|Yes| isProduct\n isProduct --\x3e|Yes| hasImage\n hasImage --\x3e|No| noRecommendation\n hasImage --\x3e|Yes| hasPrice\n hasPrice --\x3e|No| noRecommendation\n hasPrice --\x3e|Yes| hasInventory\n hasInventory --\x3e|No| noRecommendation\n hasInventory --\x3e|Yes| recommendation\n isProduct --\x3e|No| recommendation\n\n classDef fail fill:#da4e55,color:#ffffff\n classDef success fill:#1d73c9,color:#ffffff\n classDef check fill:#f6b355,color:#ffffff"}),(0,n.kt)("h3",{id:"items-missing-in-is-catalog"},"Items missing in IS Catalog"),(0,n.kt)("p",null,"If you cannot find an Item in the Catalog UI, there are three possible options:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"The Item is not in the Catalog")," - Check .csv files on the SFTP if you are using ",(0,n.kt)("a",{parentName:"li",href:"#2-interaction-studio-with-etl"},"ETL")," or use Visual Editor to validate whether the Item is captured by the ",(0,n.kt)("a",{parentName:"li",href:"#1-interaction-studio-with-sitemap"},"Sitemap"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"The Item is filtered out with Date Picker")," - Interaction Studio displays an Item in the Catalog only if there was any Item Action (View, Add to Cart or Purchase) in that time range selected in the Date Picker. You can extend it to up to 5 years to see more Items. Alternatively, use ",(0,n.kt)("a",{parentName:"li",href:"/docs/interaction-studio/snippets/is-catalog-etl-metadata-viewer"},"my viewer script")," that shows all non-archived Items."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"The Item is archived")," - Catalog does not display archived Items. Check out possible workarounds ",(0,n.kt)("a",{parentName:"li",href:"#view-archived-items-in-the-is-catalog"},"here"),".")),(0,n.kt)("h3",{id:"data-is-not-added-to-is-catalog"},"Data is not added to IS Catalog"),(0,n.kt)("p",null,"If Items are not ",(0,n.kt)("a",{parentName:"p",href:"#items-missing-in-is-catalog"},"missing in the Interaction Studio Catalog"),", but you don't see the data you expect, there are three options:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You have Strict Catalog Security enabled")," - In Interaction Studio \xbb Settings \xbb Catalog and Profile Objects \xbb Catalog Settings \xbb Security section \xbb Strict Catalog Security option. If it is checked and you use Sitemap, only the Item ID will be added to the Catalog. It is a security feature that protects the integrity of your data, but you should use it only if you are using ",(0,n.kt)("a",{parentName:"li",href:"#2-interaction-studio-with-etl"},"ETL")," to populate the Catalog metadata. You should uncheck if you use ",(0,n.kt)("a",{parentName:"li",href:"#1-interaction-studio-with-sitemap"},"Sitemap")," to build Catalog."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You have a bug in the Sitemap")," - Use Visual Editor from the Salesforce Interactions browser extension and execute Sitemap in it on the Item page. Check the left pane to see if the data is populated there. If not - you must fix the JavaScript that captures that data from the website."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You have another bug in the Sitemap")," - If Visual Editor shows all the data, but you still don't have it on most Items, the most probable reason is an issue with timing. Depending on how you capture Item metadata, some might not be available when the Sitemap executes on page load (but is ready when you launch the browser extension). Add a ",(0,n.kt)("inlineCode",{parentName:"li"},"console.log")," to see whether the data is ready when needed, and leverage JS promises to solve the issue.")),(0,n.kt)("h3",{id:"export-full-is-catalog-data"},"Export full IS Catalog data"),(0,n.kt)("p",null,"Officially, the only option to export your Catalog data is to open the Catalog listing in the Interaction Studio UI and click the Export button in the top right. Sounds easy, but there are three big problems with it:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You have limited control over what it will export")," - The export file returns ID, Name, Views, ViewTime, AverageViewSeconds and URL. The Product Catalog will also contain Cart, Purchase, Revenue, Price, Categories, and all related Catalog Objects (each as concatenated IDs without any delimiter...). Och and you cannot Export Categories at all. No way to get any additional details like other attributes (especially the key ones like Inventory Stock, Promotion State, Archived, etc.)."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You might not be able to export all Items")," - The export file will contain only the Items in the current Catalog view. It means that the Date Picker in the top right impact the scope of returned Items. Date Picker has a limited range possible, so you might need to do multiple exports and deduplicate outcomes in the future."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"You cannot export archived Items")," - Export contains only visible Items - and archived ones are hidden. So no luck. I discuss partial workarounds ",(0,n.kt)("a",{parentName:"li",href:"#view-archived-items-in-the-is-catalog"},"here"),".")),(0,n.kt)("p",null,"Ok, you know all the limitations. What now?"),(0,n.kt)("p",null,'I started this section with "officially" because I found an unofficial way. It\'s not as clean, but it solves most problems:'),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"You need a .csv file with all Item Ids - You can get it using the official export described above or pull it from your website/e-commerce database. Extend that .csv with (empty) columns containing all your attributes and related Catalog Objects and one row with an ID that doesn't exist in your Catalog (ID ",(0,n.kt)("inlineCode",{parentName:"li"},"fullDataPlease")," in the example below). For Product it might look like that:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csv"},"id,categories,attribute:name,attribute:url,attribute:imageUrl,attribute:description,attribute:promotable,attribute:price,attribute:listPrice,attribute:priceDescription,attribute:margin,attribute:inventoryCount,attribute:published,attribute:expiration,attribute:currency,attribute:archived,attribute: Rating,attribute:numRatings,attribute:myCustomAttribute1,attribute:myCustomAttribute2,relatedCatalogObject:myRelatedCatalogObject1,relatedCatalogObject:myRelatedCatalogObject2\n123,,,,,,,,,,,,,,,,,,,,,\n456,,,,,,,,,,,,,,,,,,,,,\n(...)\nfullDataPlease,,,,,,,,,,,,,,,,,,,,,\n")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},"Upload that file to the testing folder on the Interaction Studio SFTP"),(0,n.kt)("li",{parentName:"ol"},"In Interaction Studio UI, go to Feeds \xbb Feeds Dashboard \xbb Select the right ETL (all custom Catalog Objects are using CatalogObjectETL) and click Validate or Execute button at the top."),(0,n.kt)("li",{parentName:"ol"},"Click Select File \xbb Double click the Testing folder \xbb Select your .csv file. In the File Data section, you should see all the columns you have passed and all the items with only the ID column filled in."),(0,n.kt)("li",{parentName:"ol"},"Click Run Test in the bottom left and wait for it to complete. It might take some time for bigger loads. Do ",(0,n.kt)("strong",{parentName:"li"},"NOT")," click the Commit button once it is ready."),(0,n.kt)("li",{parentName:"ol"},"Click the Export ",(0,n.kt)("inlineCode",{parentName:"li"},"{Something}")," button in the bottom right - the download will start for the stagedObjects file."),(0,n.kt)("li",{parentName:"ol"},"Open it, and you will see three key row types: labels in the first row and then rows starting with either Original or Change value. You don't need any of the Change ones. Filter them out with the tool of your choice. I like to do it in VSCode with ",(0,n.kt)("inlineCode",{parentName:"li"},"^Change.*(\\n|)")," regex replacement to nothing."),(0,n.kt)("li",{parentName:"ol"},"Here you have it; the full Interaction Studio Catalog exported to a .csv file. Two notes: fields you pushed with the ",(0,n.kt)("inlineCode",{parentName:"li"},"relatedCatalogObject")," prefix will return with the ",(0,n.kt)("inlineCode",{parentName:"li"},"dimensions")," prefix, and Multistring fields will return as Arrays instead of being pipe-delimited.")),(0,n.kt)("p",null,"That's dirty, but there is currently no other option for that. I created an ",(0,n.kt)("a",{parentName:"p",href:"../../../sites/ideas/interaction-studio-ideas#full-is--mcp-catalog-export"},"Idea to change that"),"."),(0,n.kt)("h3",{id:"view-archived-items-in-the-is-catalog"},"View archived Items in the IS Catalog"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"#promotion-settings-catalog-attributes"},"Archiving hides Items"),", making viewing them hard. They won't be visible in the Catalog UI or exported when you click the Export button. Salesforce Support won't be able to provide .csv with them."),(0,n.kt)("p",null,"There are, however, two ways to do it:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"One-by-One")," - Great when you know the ID of the archived Item and need to view/edit only a few of them:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Option A: Go to the same Catalog as the Archived Item \xbb Click any Item \xbb Click the Edit button on the right pane \xbb In the URL, find ",(0,n.kt)("inlineCode",{parentName:"li"},"&itemid=123456")," and replace the value after the equal sign with the ID of the archived item \xbb Click Enter. A"),(0,n.kt)("li",{parentName:"ul"},"Option B: Open any Recipe \xbb Simulate it \xbb Find the archived Item in the Anchor Item picklist (because archived items still work as anchors) \xbb Click the Book icon on the right side of the picklist."))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"All-at-Once")," - Great when you know all possible Item IDs and need to find which are archived:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Perform ",(0,n.kt)("a",{parentName:"li",href:"#export-full-is-catalog-data"},"Full IS Catalog data export")," using full list of IDs from your source system. It will return the archived status for each one. Then you can leverage it for mass update with reupload via ",(0,n.kt)("a",{parentName:"li",href:"#2-interaction-studio-with-etl"},"ETL"),".")))),(0,n.kt)("p",null,"As you can see, in both cases, you need to know the IDs (either exact or all possible). If you don't know what IDs could have been archived because there is no backup of all possible options - you are out of luck. Currently, there is no option to view such Items. I created an ",(0,n.kt)("a",{parentName:"p",href:"../../../sites/ideas/interaction-studio-ideas#full-is--mcp-catalog-export"},"Idea to change that"),"."))}p.isMDXComponent=!0}}]);