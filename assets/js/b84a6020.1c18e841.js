"use strict";(self.webpackChunkmd=self.webpackChunkmd||[]).push([[5811],{4137:(e,t,o)=>{o.d(t,{Zo:()=>d,kt:()=>h});var n=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,a=function(e,t){if(null==e)return{};var o,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(o),u=a,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||i;return o?n.createElement(h,r(r({ref:t},d),{},{components:o})):n.createElement(h,r({ref:t},d))}));function h(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,r=new Array(i);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=o[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},1872:(e,t,o)=>{o.d(t,{m:()=>i});var n=o(7294);const a="leadText_qzwo",i=e=>{let{content:t}=e;return n.createElement(n.Fragment,null,n.createElement("p",{id:a},t))}},268:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var n=o(7462),a=(o(7294),o(4137)),i=o(1872);const r={id:"ssjs-mobileconnect-phone-change",title:"MobileConnect Phone Change",sidebar_label:"MobileConnect Phone Change",description:"Control your MobileConnect data with hidden _MobileAddress features.",image:"img/og/og-image-ssjs-mobileconnect-phone-change.png",tags:["Marketing Cloud","SSJS","SMS"]},s=void 0,l={unversionedId:"ssjs/snippets/ssjs-mobileconnect-phone-change",id:"ssjs/snippets/ssjs-mobileconnect-phone-change",title:"MobileConnect Phone Change",description:"Control your MobileConnect data with hidden _MobileAddress features.",source:"@site/docs/ssjs/snippets/ssjs-mobileconnect-phone-change.mdx",sourceDirName:"ssjs/snippets",slug:"/ssjs/snippets/ssjs-mobileconnect-phone-change",permalink:"/docs/ssjs/snippets/ssjs-mobileconnect-phone-change",draft:!1,editUrl:"https://github.com/MateuszDabrowski/mateuszdabrowski.pl/edit/master/docs/ssjs/snippets/ssjs-mobileconnect-phone-change.mdx",tags:[{label:"Marketing Cloud",permalink:"/docs/tags/marketing-cloud"},{label:"SSJS",permalink:"/docs/tags/ssjs"},{label:"SMS",permalink:"/docs/tags/sms"}],version:"current",lastUpdatedBy:"Mateusz D\u0105browski",lastUpdatedAt:1675714335,formattedLastUpdatedAt:"Feb 6, 2023",frontMatter:{id:"ssjs-mobileconnect-phone-change",title:"MobileConnect Phone Change",sidebar_label:"MobileConnect Phone Change",description:"Control your MobileConnect data with hidden _MobileAddress features.",image:"img/og/og-image-ssjs-mobileconnect-phone-change.png",tags:["Marketing Cloud","SSJS","SMS"]},sidebar:"snippets",previous:{title:"Solve with Cloud Page Apps",permalink:"/docs/ssjs/snippets/sfmc-cloud-page-apps"},next:{title:"AMPScript in SSJS",permalink:"/docs/ssjs/snippets/ampscript-in-ssjs"}},c={},d=[{value:"Problem with changing MobileConnect Mobile Number",id:"problem-with-changing-mobileconnect-mobile-number",level:2},{value:"Solution",id:"solution",level:2},{value:"Options",id:"options",level:2},{value:"Change or Merge Contact ID",id:"change-or-merge-contact-id",level:3},{value:"Add, Lookup, Remove",id:"add-lookup-remove",level:3},{value:"Self-serve it",id:"self-serve-it",level:3},{value:"Automate it",id:"automate-it",level:3}],p={toc:d},m="wrapper";function u(e){let{components:t,...o}=e;return(0,a.kt)(m,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(i.m,{content:"Control your MobileConnect data with hidden _MobileAddress features.",mdxType:"LeadText"}),(0,a.kt)("h2",{id:"problem-with-changing-mobileconnect-mobile-number"},"Problem with changing MobileConnect Mobile Number"),(0,a.kt)("p",null,"There is a lot to like about the Salesforce Marketing Cloud Mobile Connect, but Contact management is not the one."),(0,a.kt)("p",null,"One of the problems is managing the Mobile Phone Number. It is a crucial data point because we are using it to send the SMS and because it is the key value for many of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#mobileconnect-data-views"},"MobileConnect Data Views"),"."),(0,a.kt)("p",null,"There are many scenarios when we might want to update the user's Mobile Number. Be it wrong data in the initial load or client's request to change the number."),(0,a.kt)("p",null,"The official approach is to import the contact with the new Mobile Number. It, however, won't overwrite the previous phone. It will merely add a new one to the record with higher ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},"priority"),". Not perfect."),(0,a.kt)("p",null,"So what you can do? Leverage the ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},(0,a.kt)("inlineCode",{parentName:"a"},"_MobileAddress")," Data View")," along with simple SSJS snippet and force Marketing Cloud to do what you want it to do."),(0,a.kt)("admonition",{title:"You Should Know",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The solution shown below is working perfectly fine right now. However, remember that Salesforce considers ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},(0,a.kt)("inlineCode",{parentName:"a"},"_MobileAddress")," Data View")," as legacy and unsupported, so be sure to make the first run on test data to check whether it is still working correctly."),(0,a.kt)("p",{parentName:"admonition"},"Considering how intertwined this Data View still is with MobileConnect, I don't expect changes anytime soon.")),(0,a.kt)("h2",{id:"solution"},"Solution"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},(0,a.kt)("inlineCode",{parentName:"a"},"_MobileAddress")," Data View")," is unique, as it can be modified using SSJS - this is not the case with most other Data Views. We can make use of this by using ",(0,a.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/ssjs_dataExtensionRowsUpdate.htm"},(0,a.kt)("inlineCode",{parentName:"a"},"Rows.Update"))," function."),(0,a.kt)("p",null,"We will need:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Contact ID - you can check it by going to MobileConnect \xbb Manage Contacts \xbb clicking a Contact Key \xbb Attributes tab. It will be in the first table."),(0,a.kt)("li",{parentName:"ul"},"New Mobile Number - must be in the MobileConnect format with the dialling code prefix (without the ",(0,a.kt)("inlineCode",{parentName:"li"},"+")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"00"),"). For example, Poland has +48 dialling code and nine-digit numbers, so the correct form is 48123456789.")),(0,a.kt)("p",null,"With that two information, ",(0,a.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/ssjs_dataExtensionFunctions.htm"},(0,a.kt)("inlineCode",{parentName:"a"},"Init"))," the Data View and update it. Remember to load the Core Library."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'{4-5} title="Change Mobile Number of a single Contact"',"{4-5}":!0,title:'"Change',Mobile:!0,Number:!0,of:!0,a:!0,single:!0,'Contact"':!0},"<script runat=\"server\">\n    Platform.Load('Core','1');\n    var contactId = 123456789;\n    var mobileAddressDataView = DataExtension.Init('_MobileAddress');\n    var result = mobileAddressDataView.Rows.Update({_MobileNumber: '48123456789'}, ['_ContactID'], [contactId]);\n<\/script>\n")),(0,a.kt)("p",null,"That's it. Running this snippet - even in a Cloud Page or ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-code-resource"},"Code Resource")," - will change the Mobile Number assigned to the Contact. Just be sure to publish the page and load it. The Web Studio Preview won't work."),(0,a.kt)("admonition",{title:"You Should Know",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If the new Mobile Number has different dialling code, be sure to also update ",(0,a.kt)("inlineCode",{parentName:"p"},"_CountryCode")," field with appropriate two-letter code (for example, ",(0,a.kt)("inlineCode",{parentName:"p"},"PL"),")"),(0,a.kt)("p",{parentName:"admonition"},"You can do it in one line:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-js"},"mobileAddressDataView.Rows.Update({_MobileNumber:'48123456789',_CountryCode:'PL'},['_ContactID'],[contactId]);\n"))),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("p",null,"You can adapt the above script to better suit your needs."),(0,a.kt)("h3",{id:"change-or-merge-contact-id"},"Change or Merge Contact ID"),(0,a.kt)("p",null,"You are not limited to Mobile Number change in MobileConnect with this solution. You can leverage ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},(0,a.kt)("inlineCode",{parentName:"a"},"_MobileAddress")," Data View")," to even merge MobileConnect contacts."),(0,a.kt)("p",null,"Use cases?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You might have two contacts with different phone numbers that you have identified to be the same person (one tied to personal and second to work number). To optimize the contact count, you can make a merge."),(0,a.kt)("li",{parentName:"ul"},"Your client opted-in for Keyword using SMS. It created a Contact with the phone number as Contact Key. Later your CRM pushed this contact to Marketing Cloud with proper Contact Key. Merge it to have the engagement data adequately allocated.")),(0,a.kt)("p",null,"To do this, you search by Contact ID of the to-be-merged record and update it to the one you want to use after the merge."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html",metastring:'{5-6} title="Change Contact ID of a single Contact"',"{5-6}":!0,title:'"Change',Contact:!0,ID:!0,of:!0,a:!0,single:!0,'Contact"':!0},"<script runat=\"server\">\n    Platform.Load('Core','1');\n    var currentContactId = 123456789;\n    var targetContactId = 987654321;\n    var mobileAddressDataView = DataExtension.Init('_MobileAddress');\n    var result = mobileAddressDataView.Rows.Update({_ContactID: targetContactId}, ['_ContactID'], [currentContactId]);\n<\/script>\n")),(0,a.kt)("admonition",{title:"You Should Know",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You cannot merge two Contacts with the same Mobile Number. It is why it is crucial to leverage this snippet before you import new Contacts into MobileConnect."),(0,a.kt)("p",{parentName:"admonition"},"You can, however, change the Mobile Number before merging. For example, by adding 0 before the dialling code. The phone won't be correct, but you can lower priority. Engagement and Subscription history is assigned to Mobile Number, not specific Contact ID, so as long as the merged record will keep the original number, it will also have its history.")),(0,a.kt)("h3",{id:"add-lookup-remove"},"Add, Lookup, Remove"),(0,a.kt)("p",null,"You are not limited to updating. You can also leverage other SSJS functions to ",(0,a.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/ssjs_dataExtensionRowsAdd.htm"},"add"),", ",(0,a.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/ssjs_dataExtensionRowsLookup.htm"},"lookup")," or ",(0,a.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.noversion.mc-programmatic-content.meta/mc-programmatic-content/ssjs_dataExtensionRowsRemove.htm"},"remove")," MobileConnect Contacts. Those might be great for enhancing your Preference Center or leveraging Automation Studio."),(0,a.kt)("h3",{id:"self-serve-it"},"Self-serve it"),(0,a.kt)("p",null,"Above snippets are great for single cases you want to cover, but you might consider using them as a part of your Preference Center and allow your customer to change their phone number themselves."),(0,a.kt)("p",null,"Be sure, however, to normalize the number provided manually by the client for it to be numbers only with appropriate dialling code and country code."),(0,a.kt)("h3",{id:"automate-it"},"Automate it"),(0,a.kt)("p",null,"You can also leverage the snippet within an Automation Studio using Data Extension as a batch data source and Script Activity for processing. Pack the snippet within a ",(0,a.kt)("a",{parentName:"p",href:"/docs/ssjs/ssjs-loops"},(0,a.kt)("inlineCode",{parentName:"a"},"for")," loop")," and make a more significant change to your MobileConnect data."),(0,a.kt)("admonition",{title:"You Should Know",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Technically you can use this solution to modify any field of ",(0,a.kt)("a",{parentName:"p",href:"/docs/config/sfmc-mobile-connect-data-views#_mobileaddress"},(0,a.kt)("inlineCode",{parentName:"a"},"_MobileAddress")),". Due to the unsupported status of this Data View, I would recommend using Contact Builder whenever it is enough for your use case. It allows you to change everything but the Mobile Number and Contact ID.")))}u.isMDXComponent=!0}}]);